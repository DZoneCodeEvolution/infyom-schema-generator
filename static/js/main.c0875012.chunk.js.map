{"version":3,"sources":["components/Table.js","components/auto-complete/AutoCompleteTextField.js","components/TableRow.js","util/util.js","components/App.js","serviceWorker.js","index.js"],"names":["Table","className","title","this","props","children","Component","propTypes","PropTypes","oneOfType","string","func","defaultValue","disabled","bool","maxOptions","number","onBlur","onChange","onKeyDown","onRequestOptions","options","arrayOf","regex","matchAny","minChars","requestOnlyIfNoOptions","spaceRemovers","spacer","trigger","value","offsetX","offsetY","AutocompleteTextField","isTrigger","bind","getMatch","handleChange","handleKeyDown","handleResize","handleSelection","updateCaretPosition","updateHelper","resetHelper","renderAutocompleteList","state","helperVisible","left","matchLength","matchStart","selection","top","recentValue","enableSpaceRemovers","window","addEventListener","prevProps","prevState","snapshot","caret","length","removeEventListener","str","providedOptions","re","RegExp","triggerLength","triggerMatch","match","i","substring","triggerIdx","matchedSlug","filter","slug","idx","toLowerCase","indexOf","substr","e","old","target","getInputSelection","end","setState","Math","max","newValue","slice","findDOMNode","refInput","event","keyCode","preventDefault","part1","part2","setCaretPosition","input","caretPos","getCaretCoordinates","rect","getBoundingClientRect","offsetTop","min","offsetLeft","width","optionNumber","helperOptions","map","val","highlightStart","key","onClick","onMouseEnter","style","rest","stateValue","propagated","Object","assign","keys","forEach","k","ref","c","React","defaultProps","TableRow","index","type","name","placeholder","row","dbTypes","dbType","htmlTypes","htmlType","validationTypes","validations","checked","searchable","fillable","primary","inForm","inIndex","inView","shiftRowUp","size","shiftRowDown","removeRowAt","jsonFormatter","json","p","push","m","pop","tabs","count","Array","join","out","indent","replace","charAt","saveFile","a","document","createElement","body","appendChild","data","fileName","blob","Blob","url","URL","createObjectURL","href","download","click","revokeObjectURL","array_move","arr","old_index","new_index","undefined","splice","singleRow","App","addRow","cState","schemas","removeRow","updateModelName","modelName","updateRow","newState","downloadFile","JSON","stringify","moreDropdown","showMenu","closeMenu","dropdownMenu","contains","id","alignItems","src","process","alt","rel","element","language","codeStyle","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","origin","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"qSA6BeA,E,iLAzBP,OACI,yBAAKC,UAAU,oBACX,2BAAOA,UAAU,4CACb,+BACA,4BACI,wBAAIA,UAAU,uDAAd,MACA,wBAAIA,UAAU,uDAAd,SACA,wBAAIA,UAAU,uDAAd,WACA,wBAAIA,UAAU,uDAAd,aACA,wBAAIA,UAAU,uDAAd,gBACA,wBAAIA,UAAU,sDACVC,MAAM,oDADV,YAGA,wBAAID,UAAU,uDAAd,UAGJ,2BAAOA,UAAU,kBAChBE,KAAKC,MAAMC,gB,GAnBZC,a,mTCIpB,IASMC,EAAY,CACdD,UAAWE,IAAUC,UAAU,CAC3BD,IAAUE,OACVF,IAAUG,OAEdC,aAAcJ,IAAUE,OACxBG,SAAUL,IAAUM,KACpBC,WAAYP,IAAUQ,OACtBC,OAAQT,IAAUG,KAClBO,SAAUV,IAAUG,KACpBQ,UAAWX,IAAUG,KACrBS,iBAAkBZ,IAAUG,KAC5BU,QAASb,IAAUc,QAAQd,IAAUE,QACrCa,MAAOf,IAAUE,OACjBc,SAAUhB,IAAUM,KACpBW,SAAUjB,IAAUQ,OACpBU,uBAAwBlB,IAAUM,KAClCa,cAAenB,IAAUc,QAAQd,IAAUE,QAC3CkB,OAAQpB,IAAUE,OAClBmB,QAASrB,IAAUE,OACnBoB,MAAOtB,IAAUE,OACjBqB,QAASvB,IAAUQ,OACnBgB,QAASxB,IAAUQ,QAyBjBiB,E,YACF,WAAY7B,GAAQ,IAAD,8BACf,4CAAMA,KAED8B,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,cAAgB,EAAKA,cAAcH,KAAnB,gBACrB,EAAKI,aAAe,EAAKA,aAAaJ,KAAlB,gBACpB,EAAKK,gBAAkB,EAAKA,gBAAgBL,KAArB,gBACvB,EAAKM,oBAAsB,EAAKA,oBAAoBN,KAAzB,gBAC3B,EAAKO,aAAe,EAAKA,aAAaP,KAAlB,gBACpB,EAAKQ,YAAc,EAAKA,YAAYR,KAAjB,gBACnB,EAAKS,uBAAyB,EAAKA,uBAAuBT,KAA5B,gBAE9B,EAAKU,MAAQ,CACTC,eAAe,EACfC,KAAM,EACNC,YAAa,EACbC,WAAY,EACZ5B,QAAS,GACT6B,UAAW,EACXC,IAAK,EACLrB,MAAO,MAGX,EAAKsB,YAAchD,EAAMQ,aACzB,EAAKyC,qBAAsB,EA1BZ,E,iFA8BfC,OAAOC,iBAAiB,SAAUpD,KAAKoC,gB,yCAIxBiB,EAAWC,EAAWC,GAAW,IACxCrC,EAAYmC,EAAZnC,QACAsC,EAAUF,EAAVE,MAEJtC,EAAQuC,SAAWzD,KAAKC,MAAMiB,QAAQuC,QACtCzD,KAAKuC,aAAavC,KAAKiD,YAAaO,EAAOxD,KAAKC,MAAMiB,W,6CAK1DiC,OAAOO,oBAAoB,SAAU1D,KAAKoC,gB,+BAGrCuB,EAAKH,EAAOI,GAMjB,IANmC,IAAD,EACG5D,KAAKC,MAAlCyB,EAD0B,EAC1BA,QAASL,EADiB,EACjBA,SAAUD,EADO,EACPA,MACrByC,EAAK,IAAIC,OAAO1C,GAChB2C,EAAgBrC,EAAQ+B,OACxBO,EAAetC,EAAQuC,MAAMJ,GAE1BK,EAAIV,EAAQ,EAAGU,GAAK,IAAKA,EAAG,CACjC,IACMD,EADSN,EAAIQ,UAAUD,EAAGV,GACXS,MAAMJ,GACvBf,GAAc,EAElB,GAAIiB,EAAgB,EAAG,CACnB,IAAMK,EAAaJ,EAAeE,EAAIA,EAAIH,EAAgB,EAE1D,GAAIK,EAAa,EACb,OAAO,KAOX,GAJIpE,KAAK+B,UAAU4B,EAAKS,KACpBtB,EAAasB,EAAaL,IAGzBE,GAASnB,EAAa,EACvB,OAAO,SAER,CACH,GAAImB,GAASC,EAAI,EACb,SAIJ,GAAIV,GAFJV,EAAmB,IAANoB,GAAWD,EAAQ,EAAIC,EAAI,KAEb,EACvB,OAAO,KAIf,GAAIpB,GAAc,EAAG,CAAC,IAAD,aACjB,IAAMuB,EAAcV,EAAIQ,UAAUrB,EAAYU,GACxCtC,EAAU0C,EAAgBU,QAAO,SAACC,GACpC,IAAMC,EAAMD,EAAKE,cAAcC,QAAQL,EAAYI,eACnD,OAAgB,IAATD,IAAenD,GAAoB,IAARmD,MAGhC3B,EAAcwB,EAAYZ,OAEhC,MAAM,CAAN,EAAO,CAAEX,aAAYD,cAAa3B,YATjB,sCAazB,OAAO,O,gCAGDyC,EAAKO,GAAI,IACPxC,EAAY1B,KAAKC,MAAjByB,QAER,OAAKA,IAAYA,EAAQ+B,QAIrBE,EAAIgB,OAAOT,EAAGxC,EAAQ+B,UAAY/B,I,mCAO7BkD,GAAI,IAAD,EAOR5E,KAAKC,MALLc,EAFQ,EAERA,SACAG,EAHQ,EAGRA,QACAM,EAJQ,EAIRA,cACAC,EALQ,EAKRA,OACAE,EANQ,EAMRA,MAGEkD,EAAM7E,KAAKiD,YACXU,EAAMiB,EAAEE,OAAOnD,MACf6B,EAAQuB,IAAkBH,EAAEE,QAAQE,IAU1C,GARKrB,EAAIF,QACLzD,KAAKiF,SAAS,CAAEtC,eAAe,IAGnC3C,KAAKiD,YAAcU,EAEnB3D,KAAKiF,SAAS,CAAEzB,QAAO7B,MAAOiD,EAAEE,OAAOnD,SAElCgC,EAAIF,SAAWD,EAChB,OAAOzC,EAAS6D,GAIpB,GAAI5E,KAAKkD,qBAAuB1B,EAAciC,QAAUE,EAAIF,OAAS,GAAKhC,EAAOgC,OAAQ,CACrF,IAAK,IAAIS,EAAI,EAAGA,EAAIgB,KAAKC,IAAIN,EAAIpB,OAAQE,EAAIF,UAAWS,EACpD,GAAIW,EAAIX,KAAOP,EAAIO,GAAI,CACnB,GACIA,GAAK,GACFP,EAAIO,EAAI,KAAOzC,IACwB,IAAvCD,EAAckD,QAAQf,EAAIO,EAAI,MACK,IAAnC1C,EAAckD,QAAQf,EAAIO,KAC1BlE,KAAKiC,SAAS0B,EAAIQ,UAAU,EAAGD,EAAI,GAAIV,EAAQ,EAAGtC,GACvD,CACE,IAAMkE,EAAQ,UAAOzB,EAAI0B,MAAM,EAAGnB,EAAI,IAAxB,OAA6BP,EAAI0B,MAAMnB,EAAGA,EAAI,IAA9C,OAAmDP,EAAI0B,MAAMnB,EAAI,EAAGA,IAApE,OAAyEP,EAAI0B,MAAMnB,EAAI,IASrG,OAPAlE,KAAKsC,oBAAoB4B,EAAI,GAC7BoB,sBAAYtF,KAAKuF,UAAU5D,MAAQyD,EAE9BzD,GACD3B,KAAKiF,SAAS,CAAEtD,MAAOyD,IAGpBrE,EAAS6D,GAGpB,MAIR5E,KAAKkD,qBAAsB,EAS/B,OANAlD,KAAKuC,aAAaoB,EAAKH,EAAOtC,GAEzBS,GACD3B,KAAKiF,SAAS,CAAEtD,MAAOiD,EAAEE,OAAOnD,QAG7BZ,EAAS6D,K,oCAGNY,GAAQ,IAAD,EAC6BxF,KAAK0C,MAA3CC,EADS,EACTA,cAAezB,EADN,EACMA,QAAS6B,EADf,EACeA,UACxB/B,EAAchB,KAAKC,MAAnBe,UAER,GAAI2B,EACA,OAAQ6C,EAAMC,SACV,KA5OG,GA6OCD,EAAME,iBACN1F,KAAKwC,cACL,MACJ,KApPD,GAqPKgD,EAAME,iBACN1F,KAAKiF,SAAS,CAAElC,WAAa7B,EAAQuC,OAASV,EAAa,GAAK7B,EAAQuC,SACxE,MACJ,KAvPC,GAwPG+B,EAAME,iBACN1F,KAAKiF,SAAS,CAAElC,WAAYA,EAAY,GAAK7B,EAAQuC,SACrD,MACJ,KAzPE,GA0PF,KA3PG,GA4PC+B,EAAME,iBACN1F,KAAKqC,gBAAgBU,GACrB,MACJ,QACI/B,EAAUwE,QAIlBxE,EAAUwE,K,qCAKdxF,KAAKiF,SAAS,CAAEtC,eAAe,M,sCAGnB6B,GAAM,IAAD,EAC4BxE,KAAK0C,MAA1CI,EADS,EACTA,WAAYD,EADH,EACGA,YAAa3B,EADhB,EACgBA,QACzBO,EAAWzB,KAAKC,MAAhBwB,OAEF8C,EAAOrD,EAAQsD,GACf7C,EAAQ3B,KAAKiD,YACb0C,EAAQhE,EAAMwC,UAAU,EAAGrB,GAC3B8C,EAAQjE,EAAMwC,UAAUrB,EAAaD,GAErC2C,EAAQ,CAAEV,OAAQQ,sBAAYtF,KAAKuF,WAEzCC,EAAMV,OAAOnD,MAAb,UAAwBgE,GAAxB,OAAgCpB,GAAhC,OAAuC9C,GAAvC,OAAgDmE,GAChD5F,KAAKkC,aAAasD,GAElBxF,KAAKwC,cAELxC,KAAKsC,oBAAoBqD,EAAMlC,OAASc,EAAKd,OAAS,GAEtDzD,KAAKkD,qBAAsB,I,0CAGXM,GAAQ,IAAD,OACvBxD,KAAKiF,SAAS,CAAEzB,UAAS,kBAAMqC,2BAAiBP,sBAAY,EAAKC,UAAW/B,Q,mCAGnEG,EAAKH,EAAOtC,GACrB,IAAM4E,EAAQR,sBAAYtF,KAAKuF,UAEzBhB,EAAOvE,KAAKiC,SAAS0B,EAAKH,EAAOtC,GAEvC,GAAIqD,EAAM,CACN,IAAMwB,EAAWC,IAAoBF,EAAOtC,GACtCyC,EAAOH,EAAMI,wBAEblD,EAAM+C,EAAS/C,IAAM8C,EAAMK,UAC3BvD,EAAOsC,KAAKkB,IACdL,EAASnD,KAAOkD,EAAMO,WA5ST,GA6SbP,EAAMO,WAAaJ,EAAKK,MA5SV,KAqSZ,EAUyDtG,KAAKC,MAA5DqB,EAVF,EAUEA,SAAUL,EAVZ,EAUYA,iBAAkBM,EAV9B,EAU8BA,uBAGhCgD,EAAK1B,aAAevB,IAEhBiD,EAAKrD,QAAQuC,OAAS,GAEM,IAAxBc,EAAKrD,QAAQuC,QACVc,EAAKrD,QAAQ,GAAGuC,SAAWc,EAAK1B,aAI3C7C,KAAKiF,S,yVAAL,EACItC,eAAe,EACfK,MACAJ,QACG2B,KAGFhD,GAA2BgD,EAAKrD,QAAQuC,QACzCxC,EAAiB0C,EAAIgB,OAAOJ,EAAKzB,WAAYyB,EAAK1B,cAGtD7C,KAAKwC,oBAGTxC,KAAKwC,gB,oCAKTxC,KAAKiF,SAAS,CAAEtC,eAAe,EAAOI,UAAW,M,+CAG3B,IAAD,SAUjB/C,KAAK0C,MARLC,EAFiB,EAEjBA,cACAC,EAHiB,EAGjBA,KACAE,EAJiB,EAIjBA,WACAD,EALiB,EAKjBA,YACA3B,EANiB,EAMjBA,QACA6B,EAPiB,EAOjBA,UACAC,EARiB,EAQjBA,IACArB,EATiB,EASjBA,MAGJ,IAAKgB,EACD,OAAO,KAbU,MAgBoB3C,KAAKC,MAAtCW,EAhBa,EAgBbA,WAAYgB,EAhBC,EAgBDA,QAASC,EAhBR,EAgBQA,QAE7B,GAAuB,IAAnBX,EAAQuC,OACR,OAAO,KAGX,GAAIV,GAAa7B,EAAQuC,OAGrB,OAFAzD,KAAKiF,SAAS,CAAElC,UAAW,IAEpB,KAGX,IAAMwD,EAA8B,IAAf3F,EAAmBM,EAAQuC,OAAS7C,EAEnD4F,EAAgBtF,EAAQmE,MAAM,EAAGkB,GAAcE,KAAI,SAACC,EAAKlC,GAC3D,IAAMmC,EAAiBD,EAAIjC,cAAcC,QAAQ/C,EAAMgD,OAAO7B,EAAYD,GAAa4B,eAEvF,OACI,wBACI3E,UAAW0E,IAAQzB,EAAY,SAAW,KAC1C6D,IAAKF,EACLG,QAAS,WAAQ,EAAKxE,gBAAgBmC,IACtCsC,aAAc,WAAQ,EAAK7B,SAAS,CAAElC,UAAWyB,MAEhDkC,EAAIrB,MAAM,EAAGsB,GACd,gCAASD,EAAI/B,OAAOgC,EAAgB9D,IACnC6D,EAAIrB,MAAMsB,EAAiB9D,OAKxC,OACI,wBAAI/C,UAAU,2BAA2BiH,MAAO,CAAEnE,KAAMA,EAAOhB,EAASoB,IAAKA,EAAMnB,IAC9E2E,K,+BAKH,IAAD,SAQDxG,KAAKC,MANLE,EAFC,EAEDA,UACAM,EAHC,EAGDA,aACAC,EAJC,EAIDA,SACAI,EALC,EAKDA,OACAa,EANC,EAMDA,MACGqF,EAPF,wEAUUC,EAAejH,KAAK0C,MAA3Bf,MAEFuF,EAAaC,OAAOC,OAAO,GAAIJ,GACrCG,OAAOE,KAAKjH,GAAWkH,SAAQ,SAACC,UAAeL,EAAWK,MAE1D,IAAIb,EAAM,GAUV,MARqB,qBAAV/E,GAAmC,OAAVA,EAChC+E,EAAM/E,EACCsF,EACPP,EAAMO,EACCxG,IACPiG,EAAMjG,GAIN,8BACJ,kBAACN,EAAD,eACIO,SAAUA,EACVI,OAAQA,EACRC,SAAUf,KAAKkC,aACflB,UAAWhB,KAAKmC,cAChBqF,IAAK,SAACC,GAAQ,EAAKlC,SAAWkC,GAC9B9F,MAAO+E,GACHQ,IAEClH,KAAKyC,8B,GA1XciF,IAAMvH,WAiY1C2B,EAAsB6F,aAvZD,CACjBxH,UAAW,WACXM,aAAc,GACdC,UAAU,EACVE,WAAY,EACZE,OAAQ,aACRC,SAAU,aACVC,UAAW,aACXC,iBAAkB,aAClBC,QAAS,GACTE,MAAO,qBACPC,UAAU,EACVC,SAAU,EACVC,wBAAwB,EACxBC,cAAe,CAAC,IAAK,IAAK,IAAK,KAC/BC,OAAQ,IACRC,QAAS,IACTE,QAAS,EACTC,QAAS,EACTF,MAAO,MAsYIG,QChXA8F,E,iLA3ED,IAAD,OACL,OACI,4BACI,wBAAI9H,UAAU,mFAAmFE,KAAKC,MAAM4H,MAAQ,GACpH,wBAAI/H,UAAU,mFACV,2BAAOgI,KAAK,OAAOC,KAAK,OAAOC,YAAY,aAAarG,MAAO3B,KAAKC,MAAMgI,IAAIF,KAAMhH,SAAW,SAAAyE,GAAU,EAAKvF,MAAMc,SAASyE,EAAMV,SAC5HhF,UAAU,gHAErB,wBAAIA,UAAU,mFACV,kBAAC,EAAD,CAAuBK,UAAU,QAAQe,QAASgH,EAASxG,QAAQ,GAAGD,OAAO,GAAGqG,KAAK,OAAOC,KAAK,SAASC,YAAY,eAAerG,MAAO3B,KAAKC,MAAMgI,IAAIE,OAAQpH,SAAW,SAAAyE,GAAU,EAAKvF,MAAMc,SAASyE,EAAMV,SAC3MhF,UAAU,gHAErB,wBAAIA,UAAU,mFACV,kBAAC,EAAD,CAAuBK,UAAU,QAAQe,QAASkH,EAAW1G,QAAQ,GAAGD,OAAO,GAAGqG,KAAK,OAAOC,KAAK,WAAWC,YAAY,iBAAiBrG,MAAO3B,KAAKC,MAAMgI,IAAII,SAAUtH,SAAW,SAAAyE,GAAU,EAAKvF,MAAMc,SAASyE,EAAMV,SACnNhF,UAAU,gHAErB,wBAAIA,UAAU,mFACV,kBAAC,EAAD,CAAuBK,UAAU,QAAQe,QAASoH,EAAiB5G,QAAQ,GAAGD,OAAO,GAAGqG,KAAK,OAAOC,KAAK,cAAcC,YAAY,oBAAoBrG,MAAO3B,KAAKC,MAAMgI,IAAIM,YAAaxH,SAAW,SAAAyE,GAAU,EAAKvF,MAAMc,SAASyE,EAAMV,SAClOhF,UAAU,gHAErB,wBAAIA,UAAU,6FACV,yBAAKA,UAAU,cACX,2BAAOA,UAAU,oBACb,2BAAOgI,KAAK,WAAWC,KAAK,aAAajI,UAAU,mBAAmB0I,QAASxI,KAAKC,MAAMgI,IAAIQ,WAAY1H,SAAW,SAAAyE,GAAU,EAAKvF,MAAMc,SAASyE,EAAMV,WAD7J,eAMJ,yBAAKhF,UAAU,cACX,2BAAOA,UAAU,oBACb,2BAAOgI,KAAK,WAAWC,KAAK,WAAWjI,UAAU,mBAAmB0I,QAASxI,KAAKC,MAAMgI,IAAIS,SAAU3H,SAAW,SAAAyE,GAAU,EAAKvF,MAAMc,SAASyE,EAAMV,WADzJ,aAMJ,yBAAKhF,UAAU,cACX,2BAAOA,UAAU,oBACb,2BAAOgI,KAAK,WAAWC,KAAK,UAAUjI,UAAU,mBAAmB0I,QAASxI,KAAKC,MAAMgI,IAAIU,QAAS5H,SAAW,SAAAyE,GAAU,EAAKvF,MAAMc,SAASyE,EAAMV,WADvJ,YAMJ,yBAAKhF,UAAU,cACX,2BAAOA,UAAU,oBACb,2BAAOgI,KAAK,WAAWC,KAAK,SAASjI,UAAU,mBAAmB0I,QAASxI,KAAKC,MAAMgI,IAAIW,OAAQ7H,SAAW,SAAAyE,GAAU,EAAKvF,MAAMc,SAASyE,EAAMV,WADrJ,WAMJ,yBAAKhF,UAAU,cACX,2BAAOA,UAAU,oBACb,2BAAOgI,KAAK,WAAWC,KAAK,UAAUjI,UAAU,mBAAmB0I,QAASxI,KAAKC,MAAMgI,IAAIY,QAAS9H,SAAW,SAAAyE,GAAU,EAAKvF,MAAMc,SAASyE,EAAMV,WADvJ,YAMJ,yBAAKhF,UAAU,cACX,2BAAOA,UAAU,oBACb,2BAAOgI,KAAK,WAAWC,KAAK,SAASjI,UAAU,mBAAmB0I,QAASxI,KAAKC,MAAMgI,IAAIa,OAAQ/H,SAAW,SAAAyE,GAAU,EAAKvF,MAAMc,SAASyE,EAAMV,WADrJ,YAMR,wBAAIhF,UAAU,mFACV,yBAAKA,UAAU,wBACX,4BAAQA,UAAU,8CAA8CC,MAAO,gBAAiB8G,QAAS7G,KAAKC,MAAM8I,YAAY,kBAAC,IAAD,CAAiBC,KAAM,MAC/I,4BAAQlJ,UAAU,8CAA8CC,MAAO,kBAAmB8G,QAAS7G,KAAKC,MAAMgJ,cAAc,kBAAC,IAAD,CAAmBD,KAAM,MACrJ,4BAAQjJ,MAAO,oBAAqB8G,QAAS7G,KAAKC,MAAMiJ,YAAapJ,UAAU,+CAA8C,kBAAC,IAAD,CAAckJ,KAAM,a,GApElJ7I,a,0BCLhB,SAASgJ,EAAeC,GAC3B,IAAIC,EAAI,GACJC,EAAO,SAAUC,GAAM,MAAO,KAAOF,EAAEC,KAAMC,GAAM,MACnDC,EAAM,SAAUD,EAAGrF,GAAM,OAAOmF,EAAEnF,EAAE,IACpCuF,EAAO,SAAUC,GAAU,OAAO,IAAIC,MAAOD,EAAQ,GAAIE,KAAM,OACnEP,EAAI,GACJ,IAAIQ,EAAM,GACNC,EAAS,EAGbV,EAAOA,EACFW,QAAS,OAAQT,GACjBS,QAAS,iBAAkBT,GAC3BS,QAAS,MAAO,IAGrB,IAAK,IAAI7F,EAAI,EAAGA,EAAIkF,EAAK3F,OAAQS,IAAM,CACnC,IAAIuD,EAAI2B,EAAKY,OAAO9F,GAEpB,OAAOuD,GACH,IAAK,IACL,IAAK,IACDoC,GAAOpC,EAAI,KAAOgC,IAAOK,GACzB,MACJ,IAAK,IACL,IAAK,IACDD,GAAO,KAAOJ,IAAOK,GAAUrC,EAC/B,MACJ,IAAK,IACDoC,GAAO,MAAQJ,EAAKK,GACpB,MACJ,IAAK,IACDD,GAAO,KACP,MACJ,QACIA,GAAOpC,GAYnB,OALAoC,EAAMA,EACDE,QAAS,kBAAkB,SAASR,GAAI,OAAOA,EAAEQ,QAAQ,MAAM,OAC/DA,QAAS,aAAcP,GACvBO,QAAS,aAAcP,GAMzB,IAAMS,EAAY,WACrB,IAAIC,EAAIC,SAASC,cAAc,KAG/B,OAFAD,SAASE,KAAKC,YAAYJ,GAC1BA,EAAEnD,MAAQ,gBACH,SAAUwD,EAAMC,GACnB,IACIC,EAAO,IAAIC,KAAK,CADTH,GACiB,CAACzC,KAAM,iBAC/B6C,EAAMxH,OAAOyH,IAAIC,gBAAgBJ,GACrCP,EAAEY,KAAOH,EACTT,EAAEa,SAAWP,EACbN,EAAEc,QACF7H,OAAOyH,IAAIK,gBAAgBN,IAXV,GAelB,SAASO,EAAWC,EAAKC,EAAWC,GACvC,GAAIA,GAAaF,EAAI1H,OAEjB,IADA,IAAI8D,EAAI8D,EAAYF,EAAI1H,OAAS,EAC1B8D,KACH4D,EAAI7B,UAAKgC,GAIjB,OADAH,EAAII,OAAOF,EAAW,EAAGF,EAAII,OAAOH,EAAW,GAAG,IAC3CD,E,imBClEX,IAAMK,EAAY,CACd,KAAQ,QACR,OAAU,SACV,SAAY,OACZ,YAAe,WACf,YAAc,EACd,UAAY,EACZ,SAAW,EACX,QAAU,EACV,SAAW,EACX,QAAU,GAGDtD,EAAU,CAAC,SAAU,OAAQ,UAAW,QACxCE,EAAY,CAAC,OAAQ,WAAY,QAAS,OAAQ,SAAU,WAAY,SAAU,WAAY,QAAS,OAAQ,iBAC/GE,EAAkB,CAAC,WAAW,aAAa,aAAa,sBAAsB,QAAQ,aAAa,YAAY,QAAQ,OAAO,cAAc,uBAAuB,kBAAkB,UAAU,YAAY,OAAO,mBAAmB,qBAAqB,kBAAkB,eAAe,yBAAyB,aAAa,WAAW,QAAQ,wBAAwB,sBAAsB,OAAO,SAAS,WAAW,YAAY,QAAQ,iBAAiB,0BAA0B,UAAU,KAAK,OAAO,OAAO,OAAO,WAAW,YAAY,YAAY,2BAA2B,oBAAoB,2BAA2B,YAAY,qBAAqB,oBAAoB,WAAW,UAAU,UAAU,gBAAgB,WAAW,qCAAqC,yCAAyC,4BAA4B,gCAAgC,+BAA+B,mCAAmC,aAAa,aAAa,0BAA0B,SAAS,WAAW,sCAAsC,MAAM,QAwL1hCmD,E,YArLX,WAAYxL,GAAQ,IAAD,8BACf,4CAAMA,KA8BVyL,OAAS,WACL,IAAIC,EAAS,EAAKjJ,MAAMkJ,QACxBD,EAAOrC,KAAP,KAAgBkC,IAChB,EAAKvG,SAAS,CAAC2G,QAASD,KAlCT,EAqCnBE,UAAY,WACR,IAAIF,EAAM,YAAO,EAAKjJ,MAAMkJ,SAC5BD,EAAOnC,MACP,EAAKvE,SAAS,CAAC2G,QAASD,KAxCT,EA2CnBzC,YAAc,SAACrB,GACX,IAAI8D,EAAM,YAAO,EAAKjJ,MAAMkJ,SAC5BD,EAAOJ,OAAO1D,EAAM,GACpB,EAAK5C,SAAS,CAAC2G,QAASD,KA9CT,EAiDnB5C,WAAa,SAAClB,GACV,GAAW,IAARA,EAAH,CAEA,IAAI8D,EAAM,YAAO,EAAKjJ,MAAMkJ,SAC5BD,EAAST,EAAWS,EAAO9D,EAAMA,EAAM,GACvC,EAAK5C,SAAS,CAAC2G,QAASD,MAtDT,EAyDnB1C,aAAe,SAACpB,GACZ,GAAGA,IAAQ,EAAKnF,MAAMkJ,QAAQnI,OAAO,EAArC,CAEA,IAAIkI,EAAM,YAAO,EAAKjJ,MAAMkJ,SAC5BD,EAAST,EAAWS,EAAQ9D,EAAMA,EAAM,GACxC,EAAK5C,SAAS,CAAC2G,QAASD,MA9DT,EAiEnBG,gBAAkB,SAACtG,GACf,EAAKP,SAAS,CAAC8G,UAAWvG,EAAMV,OAAOnD,SAlExB,EAqEnBqK,UAAY,SAAClG,EAAO+B,GAChB,IAAIoE,EAAQ,YAAO,EAAKvJ,MAAMkJ,SACX,aAAf9F,EAAMgC,KACNmE,EAASpE,GAAO/B,EAAMiC,OAASkE,EAASpE,GAAO/B,EAAMiC,MAErDkE,EAASpE,GAAO/B,EAAMiC,MAAQjC,EAAMnE,MAExC,EAAKsD,SAAS,CAAC2G,QAASK,KA5ET,EA+EnBC,aAAe,WACXjC,EAASd,EAAcgD,KAAKC,UAAU,EAAK1J,MAAMkJ,UAAW,EAAKlJ,MAAMqJ,UAAY,UA9EnF,EAAKrJ,MAAQ,CACTkJ,QAAS,GACTG,UAAW,SACXM,cAAc,GAElB,EAAK3J,MAAMkJ,QAAQtC,KAAnB,KAA4BkC,IAC5B,EAAKc,SAAW,EAAKA,SAAStK,KAAd,gBAChB,EAAKuK,UAAY,EAAKA,UAAUvK,KAAf,gBATF,E,sEAYVwD,GAAQ,IAAD,OACZA,EAAME,iBAEN1F,KAAKiF,SAAS,CAAEoH,cAAc,IAAQ,WAClClC,SAAS/G,iBAAiB,QAAS,EAAKmJ,gB,gCAItC/G,GAAQ,IAAD,OAERxF,KAAKwM,aAAaC,SAASjH,EAAMV,SAElC9E,KAAKiF,SAAS,CAAEoH,cAAc,IAAS,WACnClC,SAASzG,oBAAoB,QAAS,EAAK6I,gB,+BA0D7C,IAAD,OACL,OACI,6BACI,yBAAKG,GAAG,SAAS5M,UAAU,2CAGvB,yBAAKA,UAAU,+FAEX,yBAAKA,UAAU,gCAAgCiH,MAAO,CAAC4F,WAAW,WAC9D,yBAAKC,IAAKC,uCAAyC/M,UAAU,YAAYgN,IAAI,SADjF,IAC0F,0BAAMhN,UAAU,gEAAhB,iCAE1F,uBAAGgL,KAAK,sDAAsDiC,IAAI,sBAAsBjI,OAAO,SAAShF,UAAU,qEAAqEC,MAAO,UAC1L,kBAAC,IAAD,CAAciJ,KAAM,QAIhC,yBAAKlJ,UAAU,sEACX,wBAAIA,UAAU,gCAAd,sBACA,yBAAKA,UAAU,aACX,2BAAOgI,KAAK,OAAOC,KAAK,QAAQ2E,GAAG,QAAQ1E,YAAY,4BAChDrG,MAAO3B,KAAK0C,MAAMqJ,UAAWhL,SAAUf,KAAK8L,gBAC5C/L,MAAO,yBACPD,UAAU,uGAAsG,0BACvHA,UAAU,iBAD6G,WAI/H,yBAAKA,UAAU,qEACX,wBAAIA,UAAU,gCAAd,WACA,kBAAC,EAAD,KAEQE,KAAK0C,MAAMkJ,QAAQnF,KAAI,SAACwB,EAAKJ,GACzB,OACI,kBAAC,EAAD,CAAUjB,IAAKiB,EACLI,IAAKA,EACLJ,MAAOA,EACP9G,SAAU,SAAC+E,GACP,EAAKkG,UAAUlG,EAAO+B,IAE1BqB,YAAa,WAAK,EAAKA,YAAYrB,IACnCkB,WAAY,WAAK,EAAKA,WAAWlB,IACjCoB,aAAc,WAAK,EAAKA,aAAapB,UAO/D,yBAAK/H,UAAU,oEACX,4BAAQC,MAAM,YACVD,UAAU,2GACVgI,KAAK,SAASjB,QAAS7G,KAAK0L,QAC5B,kBAAC,IAAD,CAAkB1C,KAAM,GAAIlJ,UAAU,SAH1C,IAGmD,0BAAMA,UAAU,oBAAhB,cAEnD,4BAAQ+G,QAAS7G,KAAKkM,aAAcnM,MAAM,uBAClCD,UAAU,8GACd,kBAAC,IAAD,CAAgBkJ,KAAM,GAAIlJ,UAAU,SACpC,0BAAMA,UAAU,oBAAhB,aAEJ,4BAAQ+G,QAAS7G,KAAK6L,UAAW9L,MAAM,oBAC/BD,UAAU,0GACd,kBAAC,IAAD,CAAckJ,KAAM,GAAIlJ,UAAU,SAClC,0BAAMA,UAAU,oBAAhB,iBAEJ,yBAAKA,UAAU,YACX,4BAAQC,MAAM,OAAO8G,QAAS7G,KAAKsM,SAC3BxM,UAAU,4GACd,kBAAC,IAAD,CAAsBkJ,KAAM,GAAIlJ,UAAU,SAC1C,0BAAMA,UAAU,oBAAhB,SAGAE,KAAK0C,MAAM2J,aACN,wBAAIvM,UAAU,mBAAmB0H,IAAK,SAACwF,GACpC,EAAKR,aAAeQ,IAEpB,6CACA,qDACA,qDACA,qDACA,sDACK,MAM7B,yBAAKlN,UAAU,qEACX,wBAAIA,UAAU,2BAA2BE,KAAK0C,MAAMqJ,UAApD,SACA,yBAAKjM,UAAU,8BACX,kBAAC,IAAD,CAAmBmN,SAAS,OAAOlG,MAAOmG,KACrC/D,EAAcgD,KAAKC,UAAUpM,KAAK0C,MAAMkJ,kB,GA7KnDzL,aCbZgN,EAAcC,QACW,cAA7BjK,OAAOkK,SAASC,UAEe,UAA7BnK,OAAOkK,SAASC,UAEhBnK,OAAOkK,SAASC,SAASrJ,MACvB,2DAsCN,SAASsJ,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBtL,QACfgL,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MCzFjEC,IAASC,OAAO,kBAAC,EAAD,MAASxE,SAASyE,eAAe,SDe1C,SAAkBnB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI9C,IAAIiC,2BAAwB1J,OAAOkK,SAASvC,MACpD+D,SAAW1L,OAAOkK,SAASwB,OAIvC,OAGF1L,OAAOC,iBAAiB,QAAQ,WAC9B,IAAMoK,EAAK,UAAMX,2BAAN,sBAEPM,IAgEV,SAAiCK,EAAOC,GAEtCqB,MAAMtB,GACHK,MAAK,SAAAkB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYtK,QAAQ,cAG5CgJ,UAAUC,cAAcyB,MAAMvB,MAAK,SAAAC,GACjCA,EAAauB,aAAaxB,MAAK,WAC7B1K,OAAOkK,SAASiC,eAKpB/B,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEArFAkB,CAAwB/B,EAAOC,GAI/BC,UAAUC,cAAcyB,MAAMvB,MAAK,WACjCO,QAAQC,IACN,iHAMJd,EAAgBC,EAAOC,OCtC/BE,I","file":"static/js/main.c0875012.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Table extends Component {\n    render() {\n        return (\n            <div className=\" overflow-x-auto\">\n                <table className=\"w-full text-center table-collapse border\">\n                    <thead>\n                    <tr>\n                        <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\"> #</th>\n                        <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\"> name</th>\n                        <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\"> dbType</th>\n                        <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\"> htmlType</th>\n                        <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\"> validations</th>\n                        <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\"\n                            title=\"(searchable, fillable, primary, inForm, inIndex)\"> Options\n                        </th>\n                        <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\">More</th>\n                    </tr>\n                    </thead>\n                    <tbody className=\"align-baseline\">\n                    {this.props.children}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default Table;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport getCaretCoordinates from 'textarea-caret';\nimport getInputSelection, { setCaretPosition } from 'get-input-selection';\n\nconst KEY_UP = 38;\nconst KEY_DOWN = 40;\nconst KEY_RETURN = 13;\nconst KEY_ENTER = 14;\nconst KEY_ESCAPE = 27;\n\nconst OPTION_LIST_Y_OFFSET = 10;\nconst OPTION_LIST_MIN_WIDTH = 100;\n\nconst propTypes = {\n    Component: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.func,\n    ]),\n    defaultValue: PropTypes.string,\n    disabled: PropTypes.bool,\n    maxOptions: PropTypes.number,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    onRequestOptions: PropTypes.func,\n    options: PropTypes.arrayOf(PropTypes.string),\n    regex: PropTypes.string,\n    matchAny: PropTypes.bool,\n    minChars: PropTypes.number,\n    requestOnlyIfNoOptions: PropTypes.bool,\n    spaceRemovers: PropTypes.arrayOf(PropTypes.string),\n    spacer: PropTypes.string,\n    trigger: PropTypes.string,\n    value: PropTypes.string,\n    offsetX: PropTypes.number,\n    offsetY: PropTypes.number,\n};\n\nconst defaultProps = {\n    Component: 'textarea',\n    defaultValue: '',\n    disabled: false,\n    maxOptions: 6,\n    onBlur: () => { },\n    onChange: () => { },\n    onKeyDown: () => { },\n    onRequestOptions: () => { },\n    options: [],\n    regex: '^[A-Za-z0-9\\\\-_]+$',\n    matchAny: false,\n    minChars: 0,\n    requestOnlyIfNoOptions: true,\n    spaceRemovers: [',', '.', '!', '?'],\n    spacer: ' ',\n    trigger: '@',\n    offsetX: 0,\n    offsetY: 0,\n    value: null,\n};\n\nclass AutocompleteTextField extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.isTrigger = this.isTrigger.bind(this);\n        this.getMatch = this.getMatch.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.handleResize = this.handleResize.bind(this);\n        this.handleSelection = this.handleSelection.bind(this);\n        this.updateCaretPosition = this.updateCaretPosition.bind(this);\n        this.updateHelper = this.updateHelper.bind(this);\n        this.resetHelper = this.resetHelper.bind(this);\n        this.renderAutocompleteList = this.renderAutocompleteList.bind(this);\n\n        this.state = {\n            helperVisible: false,\n            left: 0,\n            matchLength: 0,\n            matchStart: 0,\n            options: [],\n            selection: 0,\n            top: 0,\n            value: null,\n        };\n\n        this.recentValue = props.defaultValue;\n        this.enableSpaceRemovers = false;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.handleResize);\n    }\n\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { options } = prevProps;\n        const { caret } = prevState;\n\n        if (options.length !== this.props.options.length) {\n            this.updateHelper(this.recentValue, caret, this.props.options);\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n\n    getMatch(str, caret, providedOptions) {\n        const { trigger, matchAny, regex } = this.props;\n        const re = new RegExp(regex);\n        const triggerLength = trigger.length;\n        const triggerMatch = trigger.match(re);\n\n        for (let i = caret - 1; i >= 0; --i) {\n            const substr = str.substring(i, caret);\n            const match = substr.match(re);\n            let matchStart = -1;\n\n            if (triggerLength > 0) {\n                const triggerIdx = triggerMatch ? i : i - triggerLength + 1;\n\n                if (triggerIdx < 0) { // out of input\n                    return null;\n                }\n\n                if (this.isTrigger(str, triggerIdx)) {\n                    matchStart = triggerIdx + triggerLength;\n                }\n\n                if (!match && matchStart < 0) {\n                    return null;\n                }\n            } else {\n                if (match && i > 0) { // find first non-matching character or begin of input\n                    continue;\n                }\n                matchStart = i === 0 && match ? 0 : i + 1;\n\n                if (caret - matchStart === 0) { // matched slug is empty\n                    return null;\n                }\n            }\n\n            if (matchStart >= 0) {\n                const matchedSlug = str.substring(matchStart, caret);\n                const options = providedOptions.filter((slug) => {\n                    const idx = slug.toLowerCase().indexOf(matchedSlug.toLowerCase());\n                    return idx !== -1 && (matchAny || idx === 0);\n                });\n\n                const matchLength = matchedSlug.length;\n\n                return { matchStart, matchLength, options };\n            }\n        }\n\n        return null;\n    }\n\n    isTrigger(str, i) {\n        const { trigger } = this.props;\n\n        if (!trigger || !trigger.length) {\n            return true;\n        }\n\n        if (str.substr(i, trigger.length) === trigger) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleChange(e) {\n        const {\n            onChange,\n            options,\n            spaceRemovers,\n            spacer,\n            value,\n        } = this.props;\n\n        const old = this.recentValue;\n        const str = e.target.value;\n        const caret = getInputSelection(e.target).end;\n\n        if (!str.length) {\n            this.setState({ helperVisible: false });\n        }\n\n        this.recentValue = str;\n\n        this.setState({ caret, value: e.target.value });\n\n        if (!str.length || !caret) {\n            return onChange(e);\n        }\n\n        // '@wonderjenny ,|' -> '@wonderjenny, |'\n        if (this.enableSpaceRemovers && spaceRemovers.length && str.length > 2 && spacer.length) {\n            for (let i = 0; i < Math.max(old.length, str.length); ++i) {\n                if (old[i] !== str[i]) {\n                    if (\n                        i >= 2\n                        && str[i - 1] === spacer\n                        && spaceRemovers.indexOf(str[i - 2]) === -1\n                        && spaceRemovers.indexOf(str[i]) !== -1\n                        && this.getMatch(str.substring(0, i - 2), caret - 3, options)\n                    ) {\n                        const newValue = (`${str.slice(0, i - 1)}${str.slice(i, i + 1)}${str.slice(i - 1, i)}${str.slice(i + 1)}`);\n\n                        this.updateCaretPosition(i + 1);\n                        findDOMNode(this.refInput).value = newValue;\n\n                        if (!value) {\n                            this.setState({ value: newValue });\n                        }\n\n                        return onChange(e);\n                    }\n\n                    break;\n                }\n            }\n\n            this.enableSpaceRemovers = false;\n        }\n\n        this.updateHelper(str, caret, options);\n\n        if (!value) {\n            this.setState({ value: e.target.value });\n        }\n\n        return onChange(e);\n    }\n\n    handleKeyDown(event) {\n        const { helperVisible, options, selection } = this.state;\n        const { onKeyDown } = this.props;\n\n        if (helperVisible) {\n            switch (event.keyCode) {\n                case KEY_ESCAPE:\n                    event.preventDefault();\n                    this.resetHelper();\n                    break;\n                case KEY_UP:\n                    event.preventDefault();\n                    this.setState({ selection: ((options.length + selection) - 1) % options.length });\n                    break;\n                case KEY_DOWN:\n                    event.preventDefault();\n                    this.setState({ selection: (selection + 1) % options.length });\n                    break;\n                case KEY_ENTER:\n                case KEY_RETURN:\n                    event.preventDefault();\n                    this.handleSelection(selection);\n                    break;\n                default:\n                    onKeyDown(event);\n                    break;\n            }\n        } else {\n            onKeyDown(event);\n        }\n    }\n\n    handleResize() {\n        this.setState({ helperVisible: false });\n    }\n\n    handleSelection(idx) {\n        const { matchStart, matchLength, options } = this.state;\n        const { spacer } = this.props;\n\n        const slug = options[idx];\n        const value = this.recentValue;\n        const part1 = value.substring(0, matchStart);\n        const part2 = value.substring(matchStart + matchLength);\n\n        const event = { target: findDOMNode(this.refInput) };\n\n        event.target.value = `${part1}${slug}${spacer}${part2}`;\n        this.handleChange(event);\n\n        this.resetHelper();\n\n        this.updateCaretPosition(part1.length + slug.length + 1);\n\n        this.enableSpaceRemovers = true;\n    }\n\n    updateCaretPosition(caret) {\n        this.setState({ caret }, () => setCaretPosition(findDOMNode(this.refInput), caret));\n    }\n\n    updateHelper(str, caret, options) {\n        const input = findDOMNode(this.refInput);\n\n        const slug = this.getMatch(str, caret, options);\n\n        if (slug) {\n            const caretPos = getCaretCoordinates(input, caret);\n            const rect = input.getBoundingClientRect();\n\n            const top = caretPos.top + input.offsetTop;\n            const left = Math.min(\n                caretPos.left + input.offsetLeft - OPTION_LIST_Y_OFFSET,\n                input.offsetLeft + rect.width - OPTION_LIST_MIN_WIDTH,\n            );\n\n            const { minChars, onRequestOptions, requestOnlyIfNoOptions } = this.props;\n\n            if (\n                slug.matchLength >= minChars\n                && (\n                    slug.options.length > 1\n                    || (\n                        slug.options.length === 1\n                        && slug.options[0].length !== slug.matchLength\n                    )\n                )\n            ) {\n                this.setState({\n                    helperVisible: true,\n                    top,\n                    left,\n                    ...slug,\n                });\n            } else {\n                if (!requestOnlyIfNoOptions || !slug.options.length) {\n                    onRequestOptions(str.substr(slug.matchStart, slug.matchLength));\n                }\n\n                this.resetHelper();\n            }\n        } else {\n            this.resetHelper();\n        }\n    }\n\n    resetHelper() {\n        this.setState({ helperVisible: false, selection: 0 });\n    }\n\n    renderAutocompleteList() {\n        const {\n            helperVisible,\n            left,\n            matchStart,\n            matchLength,\n            options,\n            selection,\n            top,\n            value,\n        } = this.state;\n\n        if (!helperVisible) {\n            return null;\n        }\n\n        const { maxOptions, offsetX, offsetY } = this.props;\n\n        if (options.length === 0) {\n            return null;\n        }\n\n        if (selection >= options.length) {\n            this.setState({ selection: 0 });\n\n            return null;\n        }\n\n        const optionNumber = maxOptions === 0 ? options.length : maxOptions;\n\n        const helperOptions = options.slice(0, optionNumber).map((val, idx) => {\n            const highlightStart = val.toLowerCase().indexOf(value.substr(matchStart, matchLength).toLowerCase());\n\n            return (\n                <li\n                    className={idx === selection ? 'active' : null}\n                    key={val}\n                    onClick={() => { this.handleSelection(idx); }}\n                    onMouseEnter={() => { this.setState({ selection: idx }); }}\n                >\n                    {val.slice(0, highlightStart)}\n                    <strong>{val.substr(highlightStart, matchLength)}</strong>\n                    {val.slice(highlightStart + matchLength)}\n                </li>\n            );\n        });\n\n        return (\n            <ul className=\"react-autocomplete-input\" style={{ left: left + offsetX, top: top + offsetY }}>\n                {helperOptions}\n            </ul>\n        );\n    }\n\n    render() {\n        const {\n            Component,\n            defaultValue,\n            disabled,\n            onBlur,\n            value,\n            ...rest\n        } = this.props;\n\n        const { value: stateValue } = this.state;\n\n        const propagated = Object.assign({}, rest);\n        Object.keys(propTypes).forEach((k) => { delete propagated[k]; });//todo err\n\n        let val = '';\n\n        if (typeof value !== 'undefined' && value !== null) {\n            val = value;\n        } else if (stateValue) {\n            val = stateValue;\n        } else if (defaultValue) {\n            val = defaultValue;\n        }\n\n        return (\n            <span>\n        <Component\n            disabled={disabled}\n            onBlur={onBlur}\n            onChange={this.handleChange}\n            onKeyDown={this.handleKeyDown}\n            ref={(c) => { this.refInput = c; }}\n            value={val}\n            {...propagated}\n        />\n                {this.renderAutocompleteList()}\n      </span>\n        );\n    }\n}\n\nAutocompleteTextField.propTypes = propTypes;\nAutocompleteTextField.defaultProps = defaultProps;\n\nexport default AutocompleteTextField;","import React, {Component} from 'react';\nimport * as Icons from 'react-feather';\nimport {dbTypes, htmlTypes, validationTypes} from \"./App\";\nimport AutocompleteTextField from \"./auto-complete/AutoCompleteTextField\";\n\nclass TableRow extends Component {\n    render() {\n        return (\n            <tr>\n                <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-blue-700 whitespace-no-wrap\">{this.props.index + 1}</td>\n                <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-blue-700 whitespace-no-wrap\">\n                    <input type=\"text\" name=\"name\" placeholder=\"Enter name\" value={this.props.row.name} onChange={(event => {this.props.onChange(event.target)})}\n                           className=\"border rounded py-1 px-2 text-grey-darkest md:ml-2 focus:outline-none focus:bg-white focus:border-gray-500\"/>\n                </td>\n                <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-blue-700 whitespace-no-wrap\">\n                    <AutocompleteTextField Component=\"input\" options={dbTypes} trigger=\"\" spacer=\"\" type=\"text\" name=\"dbType\" placeholder=\"Enter dbType\" value={this.props.row.dbType} onChange={(event => {this.props.onChange(event.target)})}\n                           className=\"border rounded py-1 px-2 text-grey-darkest md:ml-2 focus:outline-none focus:bg-white focus:border-gray-500\"/>\n                </td>\n                <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-blue-700 whitespace-no-wrap\">\n                    <AutocompleteTextField Component=\"input\" options={htmlTypes} trigger=\"\" spacer=\"\" type=\"text\" name=\"htmlType\" placeholder=\"Enter htmlType\" value={this.props.row.htmlType} onChange={(event => {this.props.onChange(event.target)})}\n                           className=\"border rounded py-1 px-2 text-grey-darkest md:ml-2 focus:outline-none focus:bg-white focus:border-gray-500\"/>\n                </td>\n                <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-blue-700 whitespace-no-wrap\">\n                    <AutocompleteTextField Component=\"input\" options={validationTypes} trigger=\"\" spacer=\"\" type=\"text\" name=\"validations\" placeholder=\"Enter validations\" value={this.props.row.validations} onChange={(event => {this.props.onChange(event.target)})}\n                           className=\"border rounded py-1 px-2 text-grey-darkest md:ml-2 focus:outline-none focus:bg-white focus:border-gray-500\"/>\n                </td>\n                <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-blue-700 whitespace-no-wrap text-left\">\n                    <div className=\"form-check\">\n                        <label className=\"form-check-label\">\n                            <input type=\"checkbox\" name=\"searchable\" className=\"form-check-input\" checked={this.props.row.searchable} onChange={(event => {this.props.onChange(event.target)})}/>\n                             searchable\n                        </label>\n                    </div>\n\n                    <div className=\"form-check\">\n                        <label className=\"form-check-label\">\n                            <input type=\"checkbox\" name=\"fillable\" className=\"form-check-input\" checked={this.props.row.fillable} onChange={(event => {this.props.onChange(event.target)})}/>\n                            fillable\n                        </label>\n                    </div>\n\n                    <div className=\"form-check\">\n                        <label className=\"form-check-label\">\n                            <input type=\"checkbox\" name=\"primary\" className=\"form-check-input\" checked={this.props.row.primary} onChange={(event => {this.props.onChange(event.target)})}/>\n                            primary\n                        </label>\n                    </div>\n\n                    <div className=\"form-check\">\n                        <label className=\"form-check-label\">\n                            <input type=\"checkbox\" name=\"inForm\" className=\"form-check-input\" checked={this.props.row.inForm} onChange={(event => {this.props.onChange(event.target)})}/>\n                            inForm\n                        </label>\n                    </div>\n\n                    <div className=\"form-check\">\n                        <label className=\"form-check-label\">\n                            <input type=\"checkbox\" name=\"inIndex\" className=\"form-check-input\" checked={this.props.row.inIndex} onChange={(event => {this.props.onChange(event.target)})}/>\n                            inIndex\n                        </label>\n                    </div>\n\n                    <div className=\"form-check\">\n                        <label className=\"form-check-label\">\n                            <input type=\"checkbox\" name=\"inView\" className=\"form-check-input\" checked={this.props.row.inView} onChange={(event => {this.props.onChange(event.target)})}/>\n                            inView\n                        </label>\n                    </div>\n                </td>\n                <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-gray-600 whitespace-no-wrap\">\n                    <div className=\"inline-flex flex-col\">\n                        <button className=\"hover:bg-gray-300 rounded focus:bg-gray-300\" title={\"Move Field Up\"} onClick={this.props.shiftRowUp}><Icons.ChevronUp size={20}/></button>\n                        <button className=\"hover:bg-gray-300 rounded focus:bg-gray-300\" title={\"Move Field Down\"} onClick={this.props.shiftRowDown}><Icons.ChevronDown size={20}/></button>\n                        <button title={\"Remove This Field\"} onClick={this.props.removeRowAt} className=\"hover:bg-gray-300 rounded focus:bg-gray-300\"><Icons.Trash2 size={20}/></button>\n                    </div>\n                </td>\n            </tr>\n        );\n    }\n}\n\nexport default TableRow;","export function jsonFormatter( json ) {\n    var p = [],\n        push = function( m ) { return '\\\\' + p.push( m ) + '\\\\'; },\n        pop = function( m, i ) { return p[i-1] },\n        tabs = function( count ) { return new Array( count + 1 ).join( '\\t' ); };\n    p = [];\n    var out = \"\",\n        indent = 0;\n\n    // Extract backslashes and strings\n    json = json\n        .replace( /\\\\./g, push )\n        .replace( /(\".*?\"|'.*?')/g, push )\n        .replace( /\\s+/, '' );\n\n    // Indent and insert newlines\n    for( var i = 0; i < json.length; i++ ) {\n        var c = json.charAt(i);\n\n        switch(c) {\n            case '{':\n            case '[':\n                out += c + \"\\n\" + tabs(++indent);\n                break;\n            case '}':\n            case ']':\n                out += \"\\n\" + tabs(--indent) + c;\n                break;\n            case ',':\n                out += \",\\n\" + tabs(indent);\n                break;\n            case ':':\n                out += \": \";\n                break;\n            default:\n                out += c;\n                break;\n        }\n    }\n\n    // Strip whitespace from numeric arrays and put backslashes\n    // and strings back in\n    out = out\n        .replace( /\\[[\\d,\\s]+?\\]/g, function(m){ return m.replace(/\\s/g,''); } )\n        .replace( /\\\\(\\d+)\\\\/g, pop ) // strings\n        .replace( /\\\\(\\d+)\\\\/g, pop ); // backslashes in strings\n\n    return out;\n};\n\n\nexport const saveFile = (function () {\n    var a = document.createElement(\"a\");\n    document.body.appendChild(a);\n    a.style = \"display: none\";\n    return function (data, fileName) {\n        var json = data,\n            blob = new Blob([json], {type: \"octet/stream\"}),\n            url = window.URL.createObjectURL(blob);\n        a.href = url;\n        a.download = fileName;\n        a.click();\n        window.URL.revokeObjectURL(url);\n    };\n}());\n\nexport function array_move(arr, old_index, new_index) {\n    if (new_index >= arr.length) {\n        var k = new_index - arr.length + 1;\n        while (k--) {\n            arr.push(undefined);\n        }\n    }\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n    return arr; // for testing\n}","import React, {Component} from 'react';\nimport Table from \"./Table\";\nimport TableRow from \"./TableRow\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport codeStyle from \"react-syntax-highlighter/dist/cjs/styles/hljs/idea\";\nimport {array_move, jsonFormatter, saveFile} from \"../util/util\";\nimport * as Icons from 'react-feather';\n\nconst singleRow = {\n    \"name\": \"title\",\n    \"dbType\": \"string\",\n    \"htmlType\": \"text\",\n    \"validations\": \"required\",\n    \"searchable\": true,\n    \"fillable\": true,\n    \"primary\": false,\n    \"inForm\": true,\n    \"inIndex\": true,\n    \"inView\": true\n};\n\nexport const dbTypes = [\"string\", \"text\", \"integer\", \"enum\"];\nexport const htmlTypes = [\"text\", \"textarea\", \"email\", \"date\", \"number\", \"password\", \"select\", \"checkbox\", \"radio\", \"file\", \"toggle-switch\"];\nexport const validationTypes = [\"accepted\",\"active_url\",\"after:date\",\"after_or_equal:date\",\"alpha\",\"alpha_dash\",\"alpha_num\",\"array\",\"bail\",\"before:date\",\"before_or_equal:date\",\"between:min,max\",\"boolean\",\"confirmed\",\"date\",\"date_equals:date\",\"date_format:format\",\"different:field\",\"digits:value\",\"digits_between:min,max\",\"dimensions\",\"distinct\",\"email\",\"ends_with:foo,bar,...\",\"exists:table,column\",\"file\",\"filled\",\"gt:field\",\"gte:field\",\"image\",\"in:foo,bar,...\",\"in_array:anotherfield.*\",\"integer\",\"ip\",\"ipv4\",\"ipv6\",\"json\",\"lt:field\",\"lte:field\",\"max:value\",\"mimetypes:text/plain,...\",\"mimes:foo,bar,...\",\"Basic Usage Of MIME Rule\",\"min:value\",\"not_in:foo,bar,...\",\"not_regex:pattern\",\"nullable\",\"numeric\",\"present\",\"regex:pattern\",\"required\",\"required_if:anotherfield,value,...\",\"required_unless:anotherfield,value,...\",\"required_with:foo,bar,...\",\"required_with_all:foo,bar,...\",\"required_without:foo,bar,...\",\"required_without_all:foo,bar,...\",\"same:field\",\"size:value\",\"starts_with:foo,bar,...\",\"string\",\"timezone\",\"unique:table,column,except,idColumn\",\"url\",\"uuid\"];\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            schemas: [],\n            modelName: 'Schema',\n            moreDropdown: false\n        };\n        this.state.schemas.push({...singleRow});\n        this.showMenu = this.showMenu.bind(this);\n        this.closeMenu = this.closeMenu.bind(this);\n    }\n\n    showMenu(event) {\n        event.preventDefault();\n\n        this.setState({ moreDropdown: true }, () => {\n            document.addEventListener('click', this.closeMenu);\n        });\n    }\n\n    closeMenu(event) {\n\n        if (!this.dropdownMenu.contains(event.target)) {\n\n            this.setState({ moreDropdown: false }, () => {\n                document.removeEventListener('click', this.closeMenu);\n            });\n\n        }\n    }\n\n    addRow = () => {\n        let cState = this.state.schemas;\n        cState.push({...singleRow});\n        this.setState({schemas: cState});\n    }\n\n    removeRow = () => {\n        let cState = [...this.state.schemas];\n        cState.pop();\n        this.setState({schemas: cState});\n    }\n\n    removeRowAt = (index)=>{\n        let cState = [...this.state.schemas];\n        cState.splice(index,1);\n        this.setState({schemas: cState});\n    }\n\n    shiftRowUp = (index)=>{\n        if(index===0)\n            return;\n        let cState = [...this.state.schemas];\n        cState = array_move(cState,index,index-1);\n        this.setState({schemas: cState});\n    }\n\n    shiftRowDown = (index)=>{\n        if(index===this.state.schemas.length-1)\n            return;\n        let cState = [...this.state.schemas];\n        cState = array_move(cState, index,index+1);\n        this.setState({schemas: cState});\n    }\n\n    updateModelName = (event) => {\n        this.setState({modelName: event.target.value});\n    }\n\n    updateRow = (input, index) => {\n        let newState = [...this.state.schemas];\n        if (input.type === 'checkbox') {\n            newState[index][input.name] = !newState[index][input.name];\n        } else {\n            newState[index][input.name] = input.value;\n        }\n        this.setState({schemas: newState});\n    }\n\n    downloadFile = () => {\n        saveFile(jsonFormatter(JSON.stringify(this.state.schemas)), this.state.modelName + \".json\");\n    }\n\n    render() {\n        return (\n            <div>\n                <nav id=\"header\" className=\"bg-white fixed w-full z-10 top-0 shadow\">\n\n\n                    <div className=\"w-full container mx-auto flex flex-wrap justify-between items-center mt-0 pt-3 pb-3 md:pb-0\">\n\n                        <div className=\"pl-2 md:pl-0 pb-1 inline-flex\" style={{alignItems:'center'}}>\n                            <img src={process.env.PUBLIC_URL + \"/logo192.png\"} className=\"w-10 h-10\" alt=\"Logo\"/> <span className=\"text-blue-600 no-underline hover:no-underline font-bold pl-1\">Infyom Json Schema Generator</span>\n                        </div>\n                        <a href=\"https://github.com/harish81/infyom-schema-generator\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"text-gray-600 hover:bg-gray-300 focus:bg-gray-300 p-2 rounded mr-2\" title={\"Github\"}>\n                            <Icons.GitHub size={24}/>\n                        </a>\n                    </div>\n                </nav>\n                <div className=\"container m-auto bg-white shadow rounded px-8 pt-4 pb-8 mb-4 mt-20\">\n                    <h5 className=\"font-bold text-gray-600 pb-2\">Model/Schema Name </h5>\n                    <div className=\"mt-4 mb-4\">\n                        <input type=\"text\" name=\"model\" id=\"model\" placeholder=\"Enter model/schema name..\"\n                               value={this.state.modelName} onChange={this.updateModelName}\n                               title={\"Enter schema name here\"}\n                               className=\"border rounded py-2 px-3 text-grey-darkest focus:outline-none focus:bg-white focus:border-gray-500\"/><span\n                        className=\"text-gray-600\">.json</span>\n                    </div>\n                </div>\n                <div className=\"container m-auto bg-white shadow rounded px-8 pt-4 pb-8 mb-4 mt-2\">\n                    <h5 className=\"font-bold text-gray-600 pb-2\">Fields </h5>\n                    <Table>\n                        {\n                            this.state.schemas.map((row, index) => {\n                                return (\n                                    <TableRow key={index}\n                                              row={row}\n                                              index={index}\n                                              onChange={(input) => {\n                                                  this.updateRow(input, index)\n                                              }}\n                                              removeRowAt={()=>{this.removeRowAt(index)}}\n                                              shiftRowUp={()=>{this.shiftRowUp(index)}}\n                                              shiftRowDown={()=>{this.shiftRowDown(index)}}\n                                    />\n                                );\n                            })\n                        }\n                    </Table>\n\n                    <div className=\"flex items-center mt-4 bg-gray-100 rounded border justify-center\">\n                        <button title=\"Add Field\"\n                            className=\"hover:text-blue-500 focus:text-blue-500 text-gray-600 focus:outline-none py-2 px-3 inline-flex font-bold\"\n                            type=\"button\" onClick={this.addRow}>\n                            <Icons.PlusCircle size={20} className=\"mr-2\"/> <span className=\"hidden sm:inline\">Add Field</span>\n                        </button>\n                        <button onClick={this.downloadFile} title=\"Download Schema File\"\n                                className=\"hover:text-green-500 focus:text-green-500 text-gray-600 focus:outline-none py-2 px-3 inline-flex font-bold\">\n                            <Icons.Download size={20} className=\"mr-2\"/>\n                            <span className=\"hidden sm:inline\">Download</span>\n                        </button>\n                        <button onClick={this.removeRow} title=\"Remove Last Field\"\n                                className=\"hover:text-red-500 focus:text-red-500 text-gray-600 focus:outline-none py-2 px-3 inline-flex font-bold\">\n                            <Icons.Trash2 size={20} className=\"mr-2\"/>\n                            <span className=\"hidden sm:inline\">Remove Field</span>\n                        </button>\n                        <div className=\"dropdown\">\n                            <button title=\"More\" onClick={this.showMenu}\n                                    className=\"hover:text-gray-700 focus:text-gray-700 text-gray-600 focus:outline-none py-2 px-3 inline-flex font-bold\">\n                                <Icons.MoreHorizontal size={20} className=\"mr-2\"/>\n                                <span className=\"hidden sm:inline\">More</span>\n                            </button>\n                            {\n                                this.state.moreDropdown ?\n                                    (<ul className=\"dropdown-content\" ref={(element) => {\n                                        this.dropdownMenu = element;\n                                    }}>\n                                        <li>Add id Column</li>\n                                        <li>Add created_at Column</li>\n                                        <li>Add updated_at Column</li>\n                                        <li>Add deleted_at Column</li>\n                                        <li>Add created_by Column</li>\n                                    </ul>) : ''\n\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"container m-auto bg-white shadow rounded px-8 pt-4 pb-8 mb-4 mt-2\">\n                    <h5 className=\"font-bold text-gray-600\">{this.state.modelName}.json</h5>\n                    <div className=\"overflow-auto mt-3 text-sm\">\n                        <SyntaxHighlighter language=\"json\" style={codeStyle}>\n                            {jsonFormatter(JSON.stringify(this.state.schemas))}\n                        </SyntaxHighlighter>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.min.css';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}