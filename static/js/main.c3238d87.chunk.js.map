{"version":3,"sources":["components/Table.js","components/auto-complete/AutoCompleteTextField.js","components/TableRow.js","util/util.js","components/App.js","serviceWorker.js","index.js"],"names":["Table","className","title","this","props","children","Component","propTypes","PropTypes","oneOfType","string","func","defaultValue","disabled","bool","maxOptions","number","onBlur","onChange","onKeyDown","onRequestOptions","options","arrayOf","regex","matchAny","minChars","requestOnlyIfNoOptions","spaceRemovers","spacer","trigger","value","offsetX","offsetY","AutocompleteTextField","isTrigger","bind","getMatch","handleChange","handleKeyDown","handleResize","handleSelection","updateCaretPosition","updateHelper","resetHelper","renderAutocompleteList","state","helperVisible","left","matchLength","matchStart","selection","top","recentValue","enableSpaceRemovers","window","addEventListener","prevProps","prevState","snapshot","caret","length","removeEventListener","str","providedOptions","re","RegExp","triggerLength","triggerMatch","match","i","substring","triggerIdx","matchedSlug","filter","slug","idx","toLowerCase","indexOf","substr","e","old","target","getInputSelection","end","setState","Math","max","newValue","slice","findDOMNode","refInput","event","keyCode","preventDefault","part1","part2","setCaretPosition","input","caretPos","getCaretCoordinates","rect","getBoundingClientRect","offsetTop","min","offsetLeft","width","optionNumber","helperOptions","map","val","highlightStart","key","onClick","onMouseEnter","style","rest","stateValue","propagated","Object","assign","keys","forEach","k","ref","c","React","defaultProps","TableRow","index","type","name","placeholder","row","dbTypes","dbType","htmlTypes","htmlType","validationTypes","validations","checked","searchable","fillable","primary","inForm","inIndex","inView","height","shiftRowUp","size","shiftRowDown","position","removeRowAt","jsonFormatter","json","p","push","m","pop","tabs","count","Array","join","out","indent","replace","charAt","saveFile","a","document","createElement","body","appendChild","data","fileName","blob","Blob","url","URL","createObjectURL","href","download","click","revokeObjectURL","array_move","arr","old_index","new_index","undefined","splice","singleRow","App","addRow","cState","schemas","removeRow","addIdRow","moreDropdown","addCreatedAtRow","addUpdatedAt","addDeletedAt","updateModelName","modelName","updateRow","newState","downloadFile","JSON","stringify","codeStyle","showMenu","closeMenu","lastState","localStorage","getItem","parse","strState","setItem","dropdownMenu","contains","id","alignItems","src","process","alt","rel","element","codeStyles","xmlns","viewBox","d","language","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","origin","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c3238d87.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Table extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\" overflow-x-auto\">\r\n                <table className=\"w-full text-center table-collapse border\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\"> #</th>\r\n                        <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\"> name</th>\r\n                        <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\"> dbType</th>\r\n                        <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\"> htmlType</th>\r\n                        <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\"> validations</th>\r\n                        <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\"\r\n                            title=\"(searchable, fillable, primary, inForm, inIndex)\"> Options\r\n                        </th>\r\n                        <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\">More</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody className=\"align-baseline\">\r\n                    {this.props.children}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { findDOMNode } from 'react-dom';\r\nimport getCaretCoordinates from 'textarea-caret';\r\nimport getInputSelection, { setCaretPosition } from 'get-input-selection';\r\n\r\nconst KEY_UP = 38;\r\nconst KEY_DOWN = 40;\r\nconst KEY_RETURN = 13;\r\nconst KEY_ENTER = 14;\r\nconst KEY_ESCAPE = 27;\r\n\r\nconst OPTION_LIST_Y_OFFSET = 10;\r\nconst OPTION_LIST_MIN_WIDTH = 100;\r\n\r\nconst propTypes = {\r\n    Component: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.func,\r\n    ]),\r\n    defaultValue: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    maxOptions: PropTypes.number,\r\n    onBlur: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    onKeyDown: PropTypes.func,\r\n    onRequestOptions: PropTypes.func,\r\n    options: PropTypes.arrayOf(PropTypes.string),\r\n    regex: PropTypes.string,\r\n    matchAny: PropTypes.bool,\r\n    minChars: PropTypes.number,\r\n    requestOnlyIfNoOptions: PropTypes.bool,\r\n    spaceRemovers: PropTypes.arrayOf(PropTypes.string),\r\n    spacer: PropTypes.string,\r\n    trigger: PropTypes.string,\r\n    value: PropTypes.string,\r\n    offsetX: PropTypes.number,\r\n    offsetY: PropTypes.number,\r\n};\r\n\r\nconst defaultProps = {\r\n    Component: 'textarea',\r\n    defaultValue: '',\r\n    disabled: false,\r\n    maxOptions: 6,\r\n    onBlur: () => { },\r\n    onChange: () => { },\r\n    onKeyDown: () => { },\r\n    onRequestOptions: () => { },\r\n    options: [],\r\n    regex: '^[A-Za-z0-9\\\\-_]+$',\r\n    matchAny: false,\r\n    minChars: 0,\r\n    requestOnlyIfNoOptions: true,\r\n    spaceRemovers: [',', '.', '!', '?'],\r\n    spacer: ' ',\r\n    trigger: '@',\r\n    offsetX: 0,\r\n    offsetY: 0,\r\n    value: null,\r\n};\r\n\r\nclass AutocompleteTextField extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.isTrigger = this.isTrigger.bind(this);\r\n        this.getMatch = this.getMatch.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n        this.handleResize = this.handleResize.bind(this);\r\n        this.handleSelection = this.handleSelection.bind(this);\r\n        this.updateCaretPosition = this.updateCaretPosition.bind(this);\r\n        this.updateHelper = this.updateHelper.bind(this);\r\n        this.resetHelper = this.resetHelper.bind(this);\r\n        this.renderAutocompleteList = this.renderAutocompleteList.bind(this);\r\n\r\n        this.state = {\r\n            helperVisible: false,\r\n            left: 0,\r\n            matchLength: 0,\r\n            matchStart: 0,\r\n            options: [],\r\n            selection: 0,\r\n            top: 0,\r\n            value: null,\r\n        };\r\n\r\n        this.recentValue = props.defaultValue;\r\n        this.enableSpaceRemovers = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.handleResize);\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { options } = prevProps;\r\n        const { caret } = prevState;\r\n\r\n        if (options.length !== this.props.options.length) {\r\n            this.updateHelper(this.recentValue, caret, this.props.options);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    getMatch(str, caret, providedOptions) {\r\n        const { trigger, matchAny, regex } = this.props;\r\n        const re = new RegExp(regex);\r\n        const triggerLength = trigger.length;\r\n        const triggerMatch = trigger.match(re);\r\n\r\n        for (let i = caret - 1; i >= 0; --i) {\r\n            const substr = str.substring(i, caret);\r\n            const match = substr.match(re);\r\n            let matchStart = -1;\r\n\r\n            if (triggerLength > 0) {\r\n                const triggerIdx = triggerMatch ? i : i - triggerLength + 1;\r\n\r\n                if (triggerIdx < 0) { // out of input\r\n                    return null;\r\n                }\r\n\r\n                if (this.isTrigger(str, triggerIdx)) {\r\n                    matchStart = triggerIdx + triggerLength;\r\n                }\r\n\r\n                if (!match && matchStart < 0) {\r\n                    return null;\r\n                }\r\n            } else {\r\n                if (match && i > 0) { // find first non-matching character or begin of input\r\n                    continue;\r\n                }\r\n                matchStart = i === 0 && match ? 0 : i + 1;\r\n\r\n                if (caret - matchStart === 0) { // matched slug is empty\r\n                    return null;\r\n                }\r\n            }\r\n\r\n            if (matchStart >= 0) {\r\n                const matchedSlug = str.substring(matchStart, caret);\r\n                const options = providedOptions.filter((slug) => {\r\n                    const idx = slug.toLowerCase().indexOf(matchedSlug.toLowerCase());\r\n                    return idx !== -1 && (matchAny || idx === 0);\r\n                });\r\n\r\n                const matchLength = matchedSlug.length;\r\n\r\n                return { matchStart, matchLength, options };\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    isTrigger(str, i) {\r\n        const { trigger } = this.props;\r\n\r\n        if (!trigger || !trigger.length) {\r\n            return true;\r\n        }\r\n\r\n        if (str.substr(i, trigger.length) === trigger) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleChange(e) {\r\n        const {\r\n            onChange,\r\n            options,\r\n            spaceRemovers,\r\n            spacer,\r\n            value,\r\n        } = this.props;\r\n\r\n        const old = this.recentValue;\r\n        const str = e.target.value;\r\n        const caret = getInputSelection(e.target).end;\r\n\r\n        if (!str.length) {\r\n            this.setState({ helperVisible: false });\r\n        }\r\n\r\n        this.recentValue = str;\r\n\r\n        this.setState({ caret, value: e.target.value });\r\n\r\n        if (!str.length || !caret) {\r\n            return onChange(e);\r\n        }\r\n\r\n        // '@wonderjenny ,|' -> '@wonderjenny, |'\r\n        if (this.enableSpaceRemovers && spaceRemovers.length && str.length > 2 && spacer.length) {\r\n            for (let i = 0; i < Math.max(old.length, str.length); ++i) {\r\n                if (old[i] !== str[i]) {\r\n                    if (\r\n                        i >= 2\r\n                        && str[i - 1] === spacer\r\n                        && spaceRemovers.indexOf(str[i - 2]) === -1\r\n                        && spaceRemovers.indexOf(str[i]) !== -1\r\n                        && this.getMatch(str.substring(0, i - 2), caret - 3, options)\r\n                    ) {\r\n                        const newValue = (`${str.slice(0, i - 1)}${str.slice(i, i + 1)}${str.slice(i - 1, i)}${str.slice(i + 1)}`);\r\n\r\n                        this.updateCaretPosition(i + 1);\r\n                        findDOMNode(this.refInput).value = newValue;\r\n\r\n                        if (!value) {\r\n                            this.setState({ value: newValue });\r\n                        }\r\n\r\n                        return onChange(e);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.enableSpaceRemovers = false;\r\n        }\r\n\r\n        this.updateHelper(str, caret, options);\r\n\r\n        if (!value) {\r\n            this.setState({ value: e.target.value });\r\n        }\r\n\r\n        return onChange(e);\r\n    }\r\n\r\n    handleKeyDown(event) {\r\n        const { helperVisible, options, selection } = this.state;\r\n        const { onKeyDown } = this.props;\r\n\r\n        if (helperVisible) {\r\n            switch (event.keyCode) {\r\n                case KEY_ESCAPE:\r\n                    event.preventDefault();\r\n                    this.resetHelper();\r\n                    break;\r\n                case KEY_UP:\r\n                    event.preventDefault();\r\n                    this.setState({ selection: ((options.length + selection) - 1) % options.length });\r\n                    break;\r\n                case KEY_DOWN:\r\n                    event.preventDefault();\r\n                    this.setState({ selection: (selection + 1) % options.length });\r\n                    break;\r\n                case KEY_ENTER:\r\n                case KEY_RETURN:\r\n                    event.preventDefault();\r\n                    this.handleSelection(selection);\r\n                    break;\r\n                default:\r\n                    onKeyDown(event);\r\n                    break;\r\n            }\r\n        } else {\r\n            onKeyDown(event);\r\n        }\r\n    }\r\n\r\n    handleResize() {\r\n        this.setState({ helperVisible: false });\r\n    }\r\n\r\n    handleSelection(idx) {\r\n        const { matchStart, matchLength, options } = this.state;\r\n        const { spacer } = this.props;\r\n\r\n        const slug = options[idx];\r\n        const value = this.recentValue;\r\n        const part1 = value.substring(0, matchStart);\r\n        const part2 = value.substring(matchStart + matchLength);\r\n\r\n        const event = { target: findDOMNode(this.refInput) };\r\n\r\n        event.target.value = `${part1}${slug}${spacer}${part2}`;\r\n        this.handleChange(event);\r\n\r\n        this.resetHelper();\r\n\r\n        this.updateCaretPosition(part1.length + slug.length + 1);\r\n\r\n        this.enableSpaceRemovers = true;\r\n    }\r\n\r\n    updateCaretPosition(caret) {\r\n        this.setState({ caret }, () => setCaretPosition(findDOMNode(this.refInput), caret));\r\n    }\r\n\r\n    updateHelper(str, caret, options) {\r\n        const input = findDOMNode(this.refInput);\r\n\r\n        const slug = this.getMatch(str, caret, options);\r\n\r\n        if (slug) {\r\n            const caretPos = getCaretCoordinates(input, caret);\r\n            const rect = input.getBoundingClientRect();\r\n\r\n            const top = caretPos.top + input.offsetTop;\r\n            const left = Math.min(\r\n                caretPos.left + input.offsetLeft - OPTION_LIST_Y_OFFSET,\r\n                input.offsetLeft + rect.width - OPTION_LIST_MIN_WIDTH,\r\n            );\r\n\r\n            const { minChars, onRequestOptions, requestOnlyIfNoOptions } = this.props;\r\n\r\n            if (\r\n                slug.matchLength >= minChars\r\n                && (\r\n                    slug.options.length > 1\r\n                    || (\r\n                        slug.options.length === 1\r\n                        && slug.options[0].length !== slug.matchLength\r\n                    )\r\n                )\r\n            ) {\r\n                this.setState({\r\n                    helperVisible: true,\r\n                    top,\r\n                    left,\r\n                    ...slug,\r\n                });\r\n            } else {\r\n                if (!requestOnlyIfNoOptions || !slug.options.length) {\r\n                    onRequestOptions(str.substr(slug.matchStart, slug.matchLength));\r\n                }\r\n\r\n                this.resetHelper();\r\n            }\r\n        } else {\r\n            this.resetHelper();\r\n        }\r\n    }\r\n\r\n    resetHelper() {\r\n        this.setState({ helperVisible: false, selection: 0 });\r\n    }\r\n\r\n    renderAutocompleteList() {\r\n        const {\r\n            helperVisible,\r\n            left,\r\n            matchStart,\r\n            matchLength,\r\n            options,\r\n            selection,\r\n            top,\r\n            value,\r\n        } = this.state;\r\n\r\n        if (!helperVisible) {\r\n            return null;\r\n        }\r\n\r\n        const { maxOptions, offsetX, offsetY } = this.props;\r\n\r\n        if (options.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        if (selection >= options.length) {\r\n            this.setState({ selection: 0 });\r\n\r\n            return null;\r\n        }\r\n\r\n        const optionNumber = maxOptions === 0 ? options.length : maxOptions;\r\n\r\n        const helperOptions = options.slice(0, optionNumber).map((val, idx) => {\r\n            const highlightStart = val.toLowerCase().indexOf(value.substr(matchStart, matchLength).toLowerCase());\r\n\r\n            return (\r\n                <li\r\n                    className={idx === selection ? 'active' : null}\r\n                    key={val}\r\n                    onClick={() => { this.handleSelection(idx); }}\r\n                    onMouseEnter={() => { this.setState({ selection: idx }); }}\r\n                >\r\n                    {val.slice(0, highlightStart)}\r\n                    <strong>{val.substr(highlightStart, matchLength)}</strong>\r\n                    {val.slice(highlightStart + matchLength)}\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <ul className=\"react-autocomplete-input\" style={{ left: left + offsetX, top: top + offsetY }}>\r\n                {helperOptions}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Component,\r\n            defaultValue,\r\n            disabled,\r\n            onBlur,\r\n            value,\r\n            ...rest\r\n        } = this.props;\r\n\r\n        const { value: stateValue } = this.state;\r\n\r\n        const propagated = Object.assign({}, rest);\r\n        Object.keys(propTypes).forEach((k) => { delete propagated[k]; });//todo err\r\n\r\n        let val = '';\r\n\r\n        if (typeof value !== 'undefined' && value !== null) {\r\n            val = value;\r\n        } else if (stateValue) {\r\n            val = stateValue;\r\n        } else if (defaultValue) {\r\n            val = defaultValue;\r\n        }\r\n\r\n        return (\r\n            <span className=\"react-autocomplete-input-container\">\r\n        <Component\r\n            disabled={disabled}\r\n            onBlur={onBlur}\r\n            onChange={this.handleChange}\r\n            onKeyDown={this.handleKeyDown}\r\n            ref={(c) => { this.refInput = c; }}\r\n            value={val}\r\n            {...propagated}\r\n        />\r\n                {this.renderAutocompleteList()}\r\n      </span>\r\n        );\r\n    }\r\n}\r\n\r\nAutocompleteTextField.propTypes = propTypes;\r\nAutocompleteTextField.defaultProps = defaultProps;\r\n\r\nexport default AutocompleteTextField;","import React, {Component} from 'react';\r\nimport * as Icons from 'react-feather';\r\nimport {dbTypes, htmlTypes, validationTypes} from \"./App\";\r\nimport AutocompleteTextField from \"./auto-complete/AutoCompleteTextField\";\r\n\r\nclass TableRow extends Component {\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td className=\"p-1 border-t border-gray-300 font-mono text-xs text-blue-700 whitespace-no-wrap\">{this.props.index + 1}</td>\r\n                <td className=\"p-1 border-t border-gray-300 font-mono text-xs text-blue-700 whitespace-no-wrap\">\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Enter name\" value={this.props.row.name} onChange={(event => {this.props.onChange(event.target)})}\r\n                           className=\"border rounded py-1 px-2 text-grey-darkest md:ml-2 focus:outline-none focus:bg-white focus:border-gray-500\"/>\r\n                </td>\r\n                <td className=\"p-1 border-t border-gray-300 font-mono text-xs text-blue-700 whitespace-no-wrap\">\r\n                    <AutocompleteTextField Component=\"input\" options={dbTypes} trigger=\"\" spacer=\"\" type=\"text\" name=\"dbType\" placeholder=\"Enter dbType\" value={this.props.row.dbType} onChange={(event => {this.props.onChange(event.target)})}\r\n                           className=\"border rounded py-1 px-2 text-grey-darkest md:ml-2 focus:outline-none focus:bg-white focus:border-gray-500\"/>\r\n                </td>\r\n                <td className=\"p-1 border-t border-gray-300 font-mono text-xs text-blue-700 whitespace-no-wrap\">\r\n                    <AutocompleteTextField Component=\"input\" options={htmlTypes} trigger=\"\" spacer=\"\" type=\"text\" name=\"htmlType\" placeholder=\"Enter htmlType\" value={this.props.row.htmlType} onChange={(event => {this.props.onChange(event.target)})}\r\n                           className=\"border rounded py-1 px-2 text-grey-darkest md:ml-2 focus:outline-none focus:bg-white focus:border-gray-500\"/>\r\n                </td>\r\n                <td className=\"p-1 border-t border-gray-300 font-mono text-xs text-blue-700 whitespace-no-wrap\">\r\n                    <AutocompleteTextField Component=\"input\" options={validationTypes} trigger=\"\" spacer=\"\" type=\"text\" name=\"validations\" placeholder=\"Enter validations\" value={this.props.row.validations} onChange={(event => {this.props.onChange(event.target)})}\r\n                           className=\"border rounded py-1 px-2 text-grey-darkest md:ml-2 focus:outline-none focus:bg-white focus:border-gray-500\"/>\r\n                </td>\r\n                <td className=\"p-1 border-t border-gray-300 font-mono text-xs text-blue-700 whitespace-no-wrap text-left\">\r\n                    <div className=\"form-check\">\r\n                        <label className=\"form-check-label\">\r\n                            <input type=\"checkbox\" name=\"searchable\" className=\"form-check-input\" checked={this.props.row.searchable} onChange={(event => {this.props.onChange(event.target)})}/>\r\n                            <span>searchable</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-check\">\r\n                        <label className=\"form-check-label\">\r\n                            <input type=\"checkbox\" name=\"fillable\" className=\"form-check-input\" checked={this.props.row.fillable} onChange={(event => {this.props.onChange(event.target)})}/>\r\n                            <span>fillable</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-check\">\r\n                        <label className=\"form-check-label\">\r\n                            <input type=\"checkbox\" name=\"primary\" className=\"form-check-input\" checked={this.props.row.primary} onChange={(event => {this.props.onChange(event.target)})}/>\r\n                            <span>primary</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-check\">\r\n                        <label className=\"form-check-label\">\r\n                            <input type=\"checkbox\" name=\"inForm\" className=\"form-check-input\" checked={this.props.row.inForm} onChange={(event => {this.props.onChange(event.target)})}/>\r\n                            <span>inForm</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-check\">\r\n                        <label className=\"form-check-label\">\r\n                            <input type=\"checkbox\" name=\"inIndex\" className=\"form-check-input\" checked={this.props.row.inIndex} onChange={(event => {this.props.onChange(event.target)})}/>\r\n                            <span>inIndex</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-check\">\r\n                        <label className=\"form-check-label\">\r\n                            <input type=\"checkbox\" name=\"inView\" className=\"form-check-input\" checked={this.props.row.inView} onChange={(event => {this.props.onChange(event.target)})}/>\r\n                            <span>inView</span>\r\n                        </label>\r\n                    </div>\r\n                </td>\r\n                <td className=\"border-t border-gray-300 font-mono text-xs text-gray-600 whitespace-no-wrap\">\r\n                    <div className=\"inline-flex flex-col h-full min-h-full\" style={{height: '20vh'}}>\r\n                        <button className=\"flex-1 hover:bg-gray-300 rounded focus:bg-gray-300\" title={\"Move Field Up\"} onClick={this.props.shiftRowUp}><Icons.ChevronUp size={20}/></button>\r\n                        <button className=\"flex-1 hover:bg-gray-300 rounded focus:bg-gray-300\" title={\"Move Field Down\"} onClick={this.props.shiftRowDown}><Icons.ChevronDown size={20}/></button>\r\n                        <button style={{position:'relative'}} title={\"Remove This Field\"} onClick={this.props.removeRowAt} className=\"flex-1 mt-auto hover:bg-gray-300 rounded focus:bg-gray-300\"><Icons.Trash2 size={20}/></button>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableRow;","export function jsonFormatter( json ) {\r\n    var p = [],\r\n        push = function( m ) { return '\\\\' + p.push( m ) + '\\\\'; },\r\n        pop = function( m, i ) { return p[i-1] },\r\n        tabs = function( count ) { return new Array( count + 1 ).join( '\\t' ); };\r\n    p = [];\r\n    var out = \"\",\r\n        indent = 0;\r\n\r\n    // Extract backslashes and strings\r\n    json = json\r\n        .replace( /\\\\./g, push )\r\n        .replace( /(\".*?\"|'.*?')/g, push )\r\n        .replace( /\\s+/, '' );\r\n\r\n    // Indent and insert newlines\r\n    for( var i = 0; i < json.length; i++ ) {\r\n        var c = json.charAt(i);\r\n\r\n        switch(c) {\r\n            case '{':\r\n            case '[':\r\n                out += c + \"\\n\" + tabs(++indent);\r\n                break;\r\n            case '}':\r\n            case ']':\r\n                out += \"\\n\" + tabs(--indent) + c;\r\n                break;\r\n            case ',':\r\n                out += \",\\n\" + tabs(indent);\r\n                break;\r\n            case ':':\r\n                out += \": \";\r\n                break;\r\n            default:\r\n                out += c;\r\n                break;\r\n        }\r\n    }\r\n\r\n    // Strip whitespace from numeric arrays and put backslashes\r\n    // and strings back in\r\n    out = out\r\n        .replace( /\\[[\\d,\\s]+?\\]/g, function(m){ return m.replace(/\\s/g,''); } )\r\n        .replace( /\\\\(\\d+)\\\\/g, pop ) // strings\r\n        .replace( /\\\\(\\d+)\\\\/g, pop ); // backslashes in strings\r\n\r\n    return out;\r\n};\r\n\r\n\r\nexport const saveFile = (function () {\r\n    var a = document.createElement(\"a\");\r\n    document.body.appendChild(a);\r\n    a.style = \"display: none\";\r\n    return function (data, fileName) {\r\n        var json = data,\r\n            blob = new Blob([json], {type: \"octet/stream\"}),\r\n            url = window.URL.createObjectURL(blob);\r\n        a.href = url;\r\n        a.download = fileName;\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n    };\r\n}());\r\n\r\nexport function array_move(arr, old_index, new_index) {\r\n    if (new_index >= arr.length) {\r\n        var k = new_index - arr.length + 1;\r\n        while (k--) {\r\n            arr.push(undefined);\r\n        }\r\n    }\r\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\r\n    return arr; // for testing\r\n}","import React, {Component} from 'react';\r\nimport Table from \"./Table\";\r\nimport TableRow from \"./TableRow\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport * as codeStyles from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\r\nimport {array_move, jsonFormatter, saveFile} from \"../util/util\";\r\nimport * as Icons from 'react-feather';\r\n\r\nconst singleRow = {\r\n    \"name\": \"title\",\r\n    \"dbType\": \"string\",\r\n    \"htmlType\": \"text\",\r\n    \"validations\": \"required\",\r\n    \"searchable\": true,\r\n    \"fillable\": true,\r\n    \"primary\": false,\r\n    \"inForm\": true,\r\n    \"inIndex\": true,\r\n    \"inView\": true\r\n};\r\n\r\nexport const dbTypes = [\"string\", \"text\", \"integer\", \"enum\", \"increments\", \"timestamp\", \"bigIncrements\", \"bigInteger\", \"binary\", \"boolean\", \"date\", \"dateTime\", \"dateTimeTz\", \"decimal\", \"double\", \"float\", \"longText\", \"time\", \"timeTz\", \"tinyInteger\", \"unsignedBigInteger\", \"unsignedDecimal\", \"unsignedInteger\", \"uuid\", \"year\"];\r\nexport const htmlTypes = [\"text\", \"textarea\", \"email\", \"date\", \"number\", \"password\", \"select\", \"checkbox\", \"radio\", \"file\", \"toggle-switch\"];\r\nexport const validationTypes = [\"accepted\", \"active_url\", \"after:date\", \"after_or_equal:date\", \"alpha\", \"alpha_dash\", \"alpha_num\", \"array\", \"bail\", \"before:date\", \"before_or_equal:date\", \"between:min,max\", \"boolean\", \"confirmed\", \"date\", \"date_equals:date\", \"date_format:format\", \"different:field\", \"digits:value\", \"digits_between:min,max\", \"dimensions\", \"distinct\", \"email\", \"ends_with:foo,bar,...\", \"exists:table,column\", \"file\", \"filled\", \"gt:field\", \"gte:field\", \"image\", \"in:foo,bar,...\", \"in_array:anotherfield.*\", \"integer\", \"ip\", \"ipv4\", \"ipv6\", \"json\", \"lt:field\", \"lte:field\", \"max:value\", \"mimetypes:text/plain,...\", \"mimes:foo,bar,...\", \"Basic Usage Of MIME Rule\", \"min:value\", \"not_in:foo,bar,...\", \"not_regex:pattern\", \"nullable\", \"numeric\", \"present\", \"regex:pattern\", \"required\", \"required_if:anotherfield,value,...\", \"required_unless:anotherfield,value,...\", \"required_with:foo,bar,...\", \"required_with_all:foo,bar,...\", \"required_without:foo,bar,...\", \"required_without_all:foo,bar,...\", \"same:field\", \"size:value\", \"starts_with:foo,bar,...\", \"string\", \"timezone\", \"unique:table,column,except,idColumn\", \"url\", \"uuid\"];\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            schemas: [],\r\n            modelName: 'Schema',\r\n            moreDropdown: false,\r\n            codeStyle: 'idea'\r\n        };\r\n        this.state.schemas.push({...singleRow});\r\n        this.showMenu = this.showMenu.bind(this);\r\n        this.closeMenu = this.closeMenu.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //load the saved state from localstorage\r\n        let lastState = localStorage.getItem(\"currentState\");\r\n        if (lastState != null) {\r\n            this.setState(JSON.parse(lastState));\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        //save the state to localstorage\r\n        let strState = JSON.stringify(this.state);\r\n        localStorage.setItem(\"currentState\", strState);\r\n    }\r\n\r\n    showMenu(event) {\r\n        event.preventDefault();\r\n\r\n        this.setState({moreDropdown: true}, () => {\r\n            document.addEventListener('click', this.closeMenu);\r\n        });\r\n    }\r\n\r\n    closeMenu(event) {\r\n        if (this.dropdownMenu && !this.dropdownMenu.contains(event.target)) {\r\n            this.setState({moreDropdown: false});\r\n        }\r\n        document.removeEventListener('click', this.closeMenu);\r\n    }\r\n\r\n    addRow = () => {\r\n        let cState = this.state.schemas;\r\n        cState.push({...singleRow});\r\n        this.setState({schemas: cState});\r\n    }\r\n\r\n    removeRow = () => {\r\n        let cState = [...this.state.schemas];\r\n        cState.pop();\r\n        this.setState({schemas: cState});\r\n    }\r\n\r\n    removeRowAt = (index) => {\r\n        let cState = [...this.state.schemas];\r\n        cState.splice(index, 1);\r\n        this.setState({schemas: cState});\r\n    }\r\n\r\n    shiftRowUp = (index) => {\r\n        if (index === 0)\r\n            return;\r\n        let cState = [...this.state.schemas];\r\n        cState = array_move(cState, index, index - 1);\r\n        this.setState({schemas: cState});\r\n    }\r\n\r\n    shiftRowDown = (index) => {\r\n        if (index === this.state.schemas.length - 1)\r\n            return;\r\n        let cState = [...this.state.schemas];\r\n        cState = array_move(cState, index, index + 1);\r\n        this.setState({schemas: cState});\r\n    }\r\n\r\n    addIdRow = () => {\r\n        let cState = [...this.state.schemas];\r\n        cState.splice(0, 0, {\r\n            \"name\": \"id\",\r\n            \"dbType\": \"increments\",\r\n            \"htmlType\": null,\r\n            \"validations\": null,\r\n            \"searchable\": false,\r\n            \"fillable\": false,\r\n            \"primary\": true,\r\n            \"inForm\": false,\r\n            \"inIndex\": false,\r\n            \"inView\": false\r\n        });\r\n        this.setState({schemas: cState,moreDropdown:false});\r\n    }\r\n\r\n    addCreatedAtRow = ()=>{\r\n        let cState = [...this.state.schemas];\r\n        cState.splice(cState.length, 0, {\r\n            \"name\": \"created_at\",\r\n            \"dbType\": \"timestamp\",\r\n            \"htmlType\": null,\r\n            \"validations\": null,\r\n            \"searchable\": false,\r\n            \"fillable\": false,\r\n            \"primary\": false,\r\n            \"inForm\": false,\r\n            \"inIndex\": false,\r\n            \"inView\": true\r\n        });\r\n        this.setState({schemas: cState,moreDropdown:false});\r\n    }\r\n\r\n    addUpdatedAt = ()=>{\r\n        let cState = [...this.state.schemas];\r\n        cState.splice(cState.length, 0, {\r\n            \"name\": \"updated_at\",\r\n            \"dbType\": \"timestamp\",\r\n            \"htmlType\": null,\r\n            \"validations\": null,\r\n            \"searchable\": false,\r\n            \"fillable\": false,\r\n            \"primary\": false,\r\n            \"inForm\": false,\r\n            \"inIndex\": false,\r\n            \"inView\": true\r\n        });\r\n        this.setState({schemas: cState,moreDropdown:false});\r\n    }\r\n\r\n    addDeletedAt = ()=>{\r\n        let cState = [...this.state.schemas];\r\n        cState.splice(cState.length, 0, {\r\n            \"name\": \"deleted_at\",\r\n            \"dbType\": \"timestamp\",\r\n            \"htmlType\": null,\r\n            \"validations\": null,\r\n            \"searchable\": false,\r\n            \"fillable\": false,\r\n            \"primary\": false,\r\n            \"inForm\": false,\r\n            \"inIndex\": false,\r\n            \"inView\": false\r\n        });\r\n        this.setState({schemas: cState,moreDropdown:false});\r\n    }\r\n\r\n    updateModelName = (event) => {\r\n        this.setState({modelName: event.target.value});\r\n    }\r\n\r\n    updateRow = (input, index) => {\r\n        let newState = [...this.state.schemas];\r\n        if (input.type === 'checkbox') {\r\n            newState[index][input.name] = !newState[index][input.name];\r\n        } else {\r\n            newState[index][input.name] = input.value;\r\n        }\r\n        this.setState({schemas: newState});\r\n    }\r\n\r\n    downloadFile = () => {\r\n        saveFile(jsonFormatter(JSON.stringify(this.state.schemas)), this.state.modelName + \".json\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav id=\"header\" className=\"bg-white fixed w-full z-10 top-0 shadow\">\r\n\r\n\r\n                    <div\r\n                        className=\"w-full container mx-auto flex flex-wrap justify-between items-center mt-0 md:pb-0\">\r\n\r\n                        <div className=\"pl-2 md:pl-0 pt-1 pb-1 inline-flex\" style={{alignItems: 'center'}}>\r\n                            <img src={process.env.PUBLIC_URL + \"/logo192.png\"} className=\"w-10 h-10\" alt=\"Site Logo\"/>\r\n                            <span className=\"text-blue-600 no-underline hover:no-underline font-bold pl-1\">Infyom Json Schema Generator</span>\r\n                        </div>\r\n                        <a href=\"https://github.com/harish81/infyom-schema-generator\" rel=\"noopener noreferrer\"\r\n                           target=\"_blank\"\r\n                           className=\"text-gray-600 hover:bg-gray-300 focus:bg-gray-300 p-2 rounded mr-2\"\r\n                           title={\"Github\"}>\r\n                            <Icons.GitHub size={24}/>\r\n                        </a>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"container m-auto bg-white shadow rounded px-8 pt-4 pb-8 mb-4 mt-20\">\r\n                    <h5 className=\"font-bold text-gray-600 pb-2\">Model/Schema Name </h5>\r\n                    <div className=\"mt-4 mb-4\">\r\n                        <input type=\"text\" name=\"model\" id=\"model\" placeholder=\"Enter model/schema name..\"\r\n                               value={this.state.modelName} onChange={this.updateModelName}\r\n                               title={\"Enter schema name here\"}\r\n                               className=\"border rounded py-2 px-3 text-grey-darkest focus:outline-none focus:bg-white focus:border-gray-500\"/><span\r\n                        className=\"text-gray-600\">.json</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container m-auto bg-white shadow rounded px-8 pt-4 pb-8 mb-4 mt-2\">\r\n                    <h5 className=\"font-bold text-gray-600 pb-2\">Fields </h5>\r\n                    <Table>\r\n                        {\r\n                            this.state.schemas.map((row, index) => {\r\n                                return (\r\n                                    <TableRow key={index}\r\n                                              row={row}\r\n                                              index={index}\r\n                                              onChange={(input) => {\r\n                                                  this.updateRow(input, index)\r\n                                              }}\r\n                                              removeRowAt={() => {\r\n                                                  this.removeRowAt(index)\r\n                                              }}\r\n                                              shiftRowUp={() => {\r\n                                                  this.shiftRowUp(index)\r\n                                              }}\r\n                                              shiftRowDown={() => {\r\n                                                  this.shiftRowDown(index)\r\n                                              }}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </Table>\r\n\r\n                    <div className=\"flex items-center mt-4 bg-gray-100 rounded border justify-center\">\r\n                        <button title=\"Add Field\"\r\n                                className=\"hover:text-blue-500 focus:text-blue-500 text-gray-600 focus:outline-none py-2 px-3 inline-flex font-bold\"\r\n                                type=\"button\" onClick={this.addRow}>\r\n                            <Icons.PlusCircle size={20} className=\"mr-2\"/> <span\r\n                            className=\"hidden sm:inline\">Add Field</span>\r\n                        </button>\r\n                        <button onClick={this.downloadFile} title=\"Download Schema File\"\r\n                                className=\"hover:text-green-500 focus:text-green-500 text-gray-600 focus:outline-none py-2 px-3 inline-flex font-bold\">\r\n                            <Icons.Download size={20} className=\"mr-2\"/>\r\n                            <span className=\"hidden sm:inline\">Download</span>\r\n                        </button>\r\n                        <button onClick={this.removeRow} title=\"Remove Last Field\"\r\n                                className=\"hover:text-red-500 focus:text-red-500 text-gray-600 focus:outline-none py-2 px-3 inline-flex font-bold\">\r\n                            <Icons.Trash2 size={20} className=\"mr-2\"/>\r\n                            <span className=\"hidden sm:inline\">Remove Field</span>\r\n                        </button>\r\n                        <div className=\"dropdown\">\r\n                            <button title=\"More\" onClick={this.showMenu}\r\n                                    className=\"hover:text-gray-700 focus:text-gray-700 text-gray-600 focus:outline-none py-2 px-3 inline-flex font-bold\">\r\n                                <Icons.MoreHorizontal size={20} className=\"mr-2\"/>\r\n                                <span className=\"hidden sm:inline\">More</span>\r\n                            </button>\r\n                            {\r\n                                this.state.moreDropdown ?\r\n                                    (<ul className=\"dropdown-content\" ref={(element) => {\r\n                                        this.dropdownMenu = element;\r\n                                    }}>\r\n                                        <li onClick={this.addIdRow}>Add id Column</li>\r\n                                        <li onClick={this.addCreatedAtRow}>Add created_at Column</li>\r\n                                        <li onClick={this.addUpdatedAt}>Add updated_at Column</li>\r\n                                        <li onClick={this.addDeletedAt}>Add deleted_at Column</li>\r\n                                    </ul>) : ''\r\n\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container m-auto bg-white shadow rounded px-8 pt-4 pb-8 mb-4 mt-2\">\r\n                    <div className=\"flex justify-between items-center\">\r\n                        <h5 className=\"font-bold text-gray-600 inline\">{this.state.modelName}.json</h5>\r\n                        <div className=\"inline-block relative w-64\">\r\n                            <select name=\"code_style\" title={\"Choose your code theme\"} value={this.state.codeStyle}\r\n                                    onChange={(event) => {\r\n                                        this.setState({codeStyle: event.target.value})\r\n                                    }}\r\n                                    className=\"block appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none\">\r\n                                {\r\n                                    Object.keys(codeStyles).map(style => (\r\n                                        <option key={style}>{style}</option>\r\n                                    ))\r\n                                }\r\n                            </select>\r\n                            <div\r\n                                className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                                <svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                                     viewBox=\"0 0 20 20\">\r\n                                    <path\r\n                                        d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"/>\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"overflow-auto mt-3 text-sm\">\r\n                        <SyntaxHighlighter language=\"json\" style={codeStyles[this.state.codeStyle]}>\r\n                            {jsonFormatter(JSON.stringify(this.state.schemas))}\r\n                        </SyntaxHighlighter>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './tailwind.min.css';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}