{"version":3,"sources":["components/Table.js","components/TableRow.js","util/util.js","components/App.js","serviceWorker.js","index.js"],"names":["Table","className","title","this","props","children","Component","TableRow","index","type","name","placeholder","value","row","onChange","event","target","dbType","htmlType","validations","checked","searchable","fillable","primary","inForm","inIndex","inView","size","onClick","removeRowAt","jsonFormatter","json","p","push","m","pop","i","tabs","count","Array","join","out","indent","replace","length","c","charAt","saveFile","a","document","createElement","body","appendChild","style","data","fileName","blob","Blob","url","window","URL","createObjectURL","href","download","click","revokeObjectURL","singleRow","App","addRow","cState","state","schemas","setState","removeRow","splice","shiftRowUp","shiftRowDown","updateModelName","modelName","updateRow","input","console","log","newState","downloadFile","JSON","stringify","id","alignItems","src","map","key","language","codeStyle","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e6557df6.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Table extends Component {\n    render() {\n        return (\n            <div className=\" overflow-x-auto\">\n                <table className=\"w-full text-center table-collapse border\">\n                    <thead>\n                    <tr>\n                        <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\"> #</th>\n                        <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\"> name</th>\n                        <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\"> dbType</th>\n                        <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\"> htmlType</th>\n                        <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\"> validations</th>\n                        <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\"\n                            title=\"(searchable, fillable, primary, inForm, inIndex)\"> Options\n                        </th>\n                        <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\">More</th>\n                    </tr>\n                    </thead>\n                    <tbody className=\"align-baseline\">\n                    {this.props.children}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default Table;","import React, {Component} from 'react';\nimport * as Icons from 'react-feather';\n\nclass TableRow extends Component {\n    render() {\n        return (\n            <tr>\n                <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-blue-700 whitespace-no-wrap\">{this.props.index + 1}</td>\n                <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-blue-700 whitespace-no-wrap\">\n                    <input type=\"text\" name=\"name\" placeholder=\"Enter name\" value={this.props.row.name} onChange={(event => {this.props.onChange(event.target)})}\n                           className=\"border rounded py-1 px-2 text-grey-darkest md:ml-2 focus:outline-none focus:bg-white focus:border-gray-500\"/>\n                </td>\n                <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-blue-700 whitespace-no-wrap\">\n                    <input type=\"text\" name=\"dbType\" placeholder=\"Enter dbType\" value={this.props.row.dbType} onChange={(event => {this.props.onChange(event.target)})}\n                           className=\"border rounded py-1 px-2 text-grey-darkest md:ml-2 focus:outline-none focus:bg-white focus:border-gray-500\"/>\n                </td>\n                <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-blue-700 whitespace-no-wrap\">\n                    <input type=\"text\" name=\"htmlType\" placeholder=\"Enter htmlType\" value={this.props.row.htmlType} onChange={(event => {this.props.onChange(event.target)})}\n                           className=\"border rounded py-1 px-2 text-grey-darkest md:ml-2 focus:outline-none focus:bg-white focus:border-gray-500\"/>\n                </td>\n                <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-blue-700 whitespace-no-wrap\">\n                    <input type=\"text\" name=\"validations\" placeholder=\"Enter validations\" value={this.props.row.validations} onChange={(event => {this.props.onChange(event.target)})}\n                           className=\"border rounded py-1 px-2 text-grey-darkest md:ml-2 focus:outline-none focus:bg-white focus:border-gray-500\"/>\n                </td>\n                <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-blue-700 whitespace-no-wrap text-left\">\n                    <div className=\"form-check\">\n                        <label className=\"form-check-label\">\n                            <input type=\"checkbox\" name=\"searchable\" className=\"form-check-input\" checked={this.props.row.searchable} onChange={(event => {this.props.onChange(event.target)})}/>\n                             searchable\n                        </label>\n                    </div>\n\n                    <div className=\"form-check\">\n                        <label className=\"form-check-label\">\n                            <input type=\"checkbox\" name=\"fillable\" className=\"form-check-input\" checked={this.props.row.fillable} onChange={(event => {this.props.onChange(event.target)})}/>\n                            fillable\n                        </label>\n                    </div>\n\n                    <div className=\"form-check\">\n                        <label className=\"form-check-label\">\n                            <input type=\"checkbox\" name=\"primary\" className=\"form-check-input\" checked={this.props.row.primary} onChange={(event => {this.props.onChange(event.target)})}/>\n                            primary\n                        </label>\n                    </div>\n\n                    <div className=\"form-check\">\n                        <label className=\"form-check-label\">\n                            <input type=\"checkbox\" name=\"inForm\" className=\"form-check-input\" checked={this.props.row.inForm} onChange={(event => {this.props.onChange(event.target)})}/>\n                            inForm\n                        </label>\n                    </div>\n\n                    <div className=\"form-check\">\n                        <label className=\"form-check-label\">\n                            <input type=\"checkbox\" name=\"inIndex\" className=\"form-check-input\" checked={this.props.row.inIndex} onChange={(event => {this.props.onChange(event.target)})}/>\n                            inIndex\n                        </label>\n                    </div>\n\n                    <div className=\"form-check\">\n                        <label className=\"form-check-label\">\n                            <input type=\"checkbox\" name=\"inView\" className=\"form-check-input\" checked={this.props.row.inView} onChange={(event => {this.props.onChange(event.target)})}/>\n                            inView\n                        </label>\n                    </div>\n                </td>\n                <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-gray-600 whitespace-no-wrap\">\n                    <div className=\"inline-flex flex-col\">\n                        <Icons.ChevronUp className=\"hover:bg-gray-300 rounded focus:bg-gray-300\" size={20} title=\"Move Up\"/>\n                        <Icons.ChevronDown className=\"hover:bg-gray-300 rounded focus:bg-gray-300\" size={20}/>\n                        <button title={\"Remove This Field\"} onClick={this.props.removeRowAt} className=\"hover:bg-gray-300 rounded focus:bg-gray-300\"><Icons.Trash2 size={20}/></button>\n                    </div>\n                </td>\n            </tr>\n        );\n    }\n}\n\nexport default TableRow;","export function jsonFormatter( json ) {\n    var p = [],\n        push = function( m ) { return '\\\\' + p.push( m ) + '\\\\'; },\n        pop = function( m, i ) { return p[i-1] },\n        tabs = function( count ) { return new Array( count + 1 ).join( '\\t' ); };\n    p = [];\n    var out = \"\",\n        indent = 0;\n\n    // Extract backslashes and strings\n    json = json\n        .replace( /\\\\./g, push )\n        .replace( /(\".*?\"|'.*?')/g, push )\n        .replace( /\\s+/, '' );\n\n    // Indent and insert newlines\n    for( var i = 0; i < json.length; i++ ) {\n        var c = json.charAt(i);\n\n        switch(c) {\n            case '{':\n            case '[':\n                out += c + \"\\n\" + tabs(++indent);\n                break;\n            case '}':\n            case ']':\n                out += \"\\n\" + tabs(--indent) + c;\n                break;\n            case ',':\n                out += \",\\n\" + tabs(indent);\n                break;\n            case ':':\n                out += \": \";\n                break;\n            default:\n                out += c;\n                break;\n        }\n    }\n\n    // Strip whitespace from numeric arrays and put backslashes\n    // and strings back in\n    out = out\n        .replace( /\\[[\\d,\\s]+?\\]/g, function(m){ return m.replace(/\\s/g,''); } )\n        .replace( /\\\\(\\d+)\\\\/g, pop ) // strings\n        .replace( /\\\\(\\d+)\\\\/g, pop ); // backslashes in strings\n\n    return out;\n};\n\n\nexport const saveFile = (function () {\n    var a = document.createElement(\"a\");\n    document.body.appendChild(a);\n    a.style = \"display: none\";\n    return function (data, fileName) {\n        var json = data,\n            blob = new Blob([json], {type: \"octet/stream\"}),\n            url = window.URL.createObjectURL(blob);\n        a.href = url;\n        a.download = fileName;\n        a.click();\n        window.URL.revokeObjectURL(url);\n    };\n}());","import React, {Component} from 'react';\nimport Table from \"./Table\";\nimport TableRow from \"./TableRow\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport codeStyle from \"react-syntax-highlighter/dist/cjs/styles/hljs/idea\";\nimport {jsonFormatter, saveFile} from \"../util/util\";\nimport * as Icons from 'react-feather';\n\nconst singleRow = {\n    \"name\": \"title\",\n    \"dbType\": \"string\",\n    \"htmlType\": \"text\",\n    \"validations\": \"required\",\n    \"searchable\": true,\n    \"fillable\": true,\n    \"primary\": false,\n    \"inForm\": true,\n    \"inIndex\": true,\n    \"inView\": true\n};\n\nexport const dbTypes = [\"string\", \"text\", \"integer\", \"enum\"];\nexport const htmlTypes = [\"text\", \"textarea\", \"email\", \"date\", \"number\", \"password\", \"select\", \"checkbox\", \"radio\", \"file\", \"toggle-switch\"];\nexport const validationTypes = [\"required\", \"string\", \"numeric\"];\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            schemas: [],\n            modelName: 'Schema'\n        };\n        this.state.schemas.push({...singleRow});\n    }\n\n    addRow = () => {\n        let cState = this.state.schemas;\n        cState.push({...singleRow});\n        this.setState({schemas: cState});\n    }\n\n    removeRow = () => {\n        let cState = [...this.state.schemas];\n        cState.pop();\n        this.setState({schemas: cState});\n    }\n\n    removeRowAt = (index)=>{\n        let cState = [...this.state.schemas];\n        cState.splice(index,1);\n        this.setState({schemas: cState});\n    }\n\n    shiftRowUp = (index)=>{//todo: continue\n        if(index===0)\n            return;\n        let cState = [...this.state.schemas];\n        let curElem = {...cState[index]};\n        let prevElem = {...cState[index-1]};\n        this.setState({schemas: cState});\n    }\n\n    shiftRowDown = (index)=>{\n\n    }\n\n    updateModelName = (event) => {\n        this.setState({modelName: event.target.value});\n    }\n\n    updateRow = (input, index) => {\n        console.log(input.type, input.value);\n        let newState = [...this.state.schemas];\n        if (input.type === 'checkbox') {\n            newState[index][input.name] = !newState[index][input.name];\n        } else {\n            newState[index][input.name] = input.value;\n        }\n        this.setState({schemas: newState});\n    }\n\n    downloadFile = () => {\n        saveFile(jsonFormatter(JSON.stringify(this.state.schemas)), this.state.modelName + \".json\");\n    }\n\n    render() {\n        return (\n            <div>\n                <nav id=\"header\" className=\"bg-white fixed w-full z-10 top-0 shadow\">\n\n\n                    <div className=\"w-full container mx-auto flex flex-wrap justify-between items-center mt-0 pt-3 pb-3 md:pb-0\">\n\n                        <div className=\"pl-2 md:pl-0 pb-1 inline-flex\" style={{alignItems:'center'}}>\n                            <img src=\"/logo192.png\" className=\"w-10 h-10\"/> <span className=\"text-blue-600 no-underline hover:no-underline font-bold pl-1\">Infyom Json Schema Generator</span>\n                        </div>\n                        <a href=\"https://github.com/harish81/infyom-schema-generator\" target=\"_blank\" className=\"text-gray-600 hover:bg-gray-300 focus:bg-gray-300 p-2 rounded mr-2\" title={\"Github\"}>\n                            <Icons.GitHub size={24}/>\n                        </a>\n                    </div>\n                </nav>\n                <div className=\"container m-auto bg-white shadow rounded px-8 pt-4 pb-8 mb-4 mt-20\">\n                    <h5 className=\"font-bold text-gray-600 pb-2\">Model/Schema Name </h5>\n                    <div className=\"mt-4 mb-4\">\n                        <input type=\"text\" name=\"model\" id=\"model\" placeholder=\"Enter model/schema name..\"\n                               value={this.state.modelName} onChange={this.updateModelName}\n                               title={\"Enter schema name here\"}\n                               className=\"border rounded py-2 px-3 text-grey-darkest focus:outline-none focus:bg-white focus:border-gray-500\"/><span\n                        className=\"text-gray-600\">.json</span>\n                    </div>\n                </div>\n                <div className=\"container m-auto bg-white shadow rounded px-8 pt-4 pb-8 mb-4 mt-2\">\n                    <h5 className=\"font-bold text-gray-600 pb-2\">Fields </h5>\n                    <Table>\n                        {\n                            this.state.schemas.map((row, index) => {\n                                return (\n                                    <TableRow key={index}\n                                              row={row}\n                                              index={index}\n                                              onChange={(input) => {\n                                                  this.updateRow(input, index)\n                                              }}\n                                              removeRowAt={()=>{this.removeRowAt(index)}}\n                                    />\n                                );\n                            })\n                        }\n                    </Table>\n\n                    <div className=\"flex items-center mt-4 bg-gray-100 rounded border justify-center\">\n                        <button title=\"Add Field\"\n                            className=\"hover:text-blue-500 focus:text-blue-500 text-gray-600 focus:outline-none py-2 px-3 inline-flex font-bold\"\n                            type=\"button\" onClick={this.addRow}>\n                            <Icons.PlusCircle size={20} className=\"mr-2\"/> <span className=\"hidden sm:inline\">Add Field</span>\n                        </button>\n                        <button onClick={this.downloadFile} title=\"Download Schema File\"\n                                className=\"hover:text-green-500 focus:text-green-500 text-gray-600 focus:outline-none py-2 px-3 inline-flex font-bold\">\n                            <Icons.Download size={20} className=\"mr-2\"/>\n                            <span className=\"hidden sm:inline\">Download</span>\n                        </button>\n                        <button onClick={this.removeRow} title=\"Remove Last Field\"\n                                className=\"hover:text-red-500 focus:text-red-500 text-gray-600 focus:outline-none py-2 px-3 inline-flex font-bold\">\n                            <Icons.Trash2 size={20} className=\"mr-2\"/>\n                            <span className=\"hidden sm:inline\">Remove Field</span>\n                        </button>\n                        <button title=\"More\"\n                                className=\"hover:text-gray-700 focus:text-gray-700 text-gray-600 focus:outline-none py-2 px-3 inline-flex font-bold\">\n                            <Icons.MoreHorizontal size={20} className=\"mr-2\"/>\n                            <span className=\"hidden sm:inline\">More</span>\n                        </button>\n                    </div>\n                </div>\n                <div className=\"container m-auto bg-white shadow rounded px-8 pt-4 pb-8 mb-4 mt-2\">\n                    <h5 className=\"font-bold text-gray-600\">{this.state.modelName}.json</h5>\n                    <div className=\"overflow-auto mt-3 text-sm\">\n                        <SyntaxHighlighter language=\"json\" style={codeStyle}>\n                            {jsonFormatter(JSON.stringify(this.state.schemas))}\n                        </SyntaxHighlighter>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.min.css';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}